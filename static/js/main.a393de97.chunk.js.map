{"version":3,"sources":["components/card.js","containers/playerdeck.js","containers/playerdiscard.js","containers/playerhand.js","containers/playeronearea.js","containers/playertwoarea.js","containers/actioncards.js","containers/treasurecards.js","containers/victorycards.js","components/playerturninfo.js","containers/supplyarea.js","components/trash.js","components/cardinfo.js","containers/playtable.js","containers/menu.js","App.js","serviceWorker.js","reducers/supplyreducer.js","reducers/gamereducer.js","reducers/playeronereducer.js","reducers/playertworeducer.js","index.js"],"names":["Card","componentWillUnmount","_this","props","trash","includes","card","hoverOff","handleClick","_this$props","className","player","playerTurn","playTreasureCard1","playTreasureCard2","buyCard1","buyCard2","playAction1","playAction2","wallet1","wallet2","buys1","buys2","actions1","actions2","triggerDispatch1","triggerDispatch2","deck1","deck2","mine","hand1","hand2","trashTreasure1","trashTreasure2","trashRemodel1","trashRemodel2","gainRemodel1","gainRemodel2","remodel","remodelGain","remodelValue","workshop","gainWorkshop1","gainWorkshop2","militia","militiaDefend1","militiaDefend2","militiaDiscardFirst","militiaDiscardSecond","militiaDiscardFirst1","militiaDiscardFirst2","militiaDiscardSecond1","militiaDiscardSecond2","militiaBreak","cellar1","cellar2","cellarDiscard1","cellarDiscard2","card_type","name","cost","triggers","forEach","trigger","concat","length","_this2","this","_this$props2","index","id","react_default","a","createElement","react","src","picture","alt","onClick","onMouseEnter","hoverOn","onMouseLeave","React","Component","connect","state","_state$supply","supply","isHovered","_state$playerOne","playerOne","turns1","_state$playerTwo","playerTwo","turns2","dispatch","type","payload","deck","treasure","trashVictory1","trashVictory2","PlayerDeck","renderDeck","map","components_card","key","handleDeal","turns","PlayerDiscard","renderDiscard","discard","PlayerHand","renderHand","hand","gameStart1","gameStart2","handleDraw","PlayerOneArea","deal","draw","handleCycle","cycle","discard1","playerdiscard","playerdeck","playerhand","coppers","estates","PlayerTwoArea","discard2","ActionCards","renderCellars","cellars","renderMoats","moats","renderWorkshops","workshops","renderWoodcutters","woodcutters","renderVillages","villages","renderSmithys","smithys","renderMilitias","militias","renderRemodels","remodels","renderMarkets","markets","renderMines","mines","fetch","then","resp","json","cards","setCellars","filter","setMoats","setWorkshops","setWoodcutters","setVillages","setMilitias","setSmithys","setRemodels","setMarkets","setMines","TreasureCards","renderCoppers","renderSilvers","silvers","renderGolds","golds","setCoppers","setSilvers","setGolds","gameStart","game","VictoryCards","renderEstates","renderDuchys","duchys","renderProvinces","provinces","setEstates","setDuchys","setProvinces","PlayerTurnInfo","actions","buys","wallet","victoryPoints","SupplyArea","handleClick1","endCellar1","handleClick2","endCellar2","victoryPoints1","victoryPoints2","endTurn1","endTurn2","gameEnd","playerturninfo","treasurecards","victorycards","actioncards","workshopGain","Trash","renderTrash","setTrash","console","log","CardInfo","hoverCard","description","PlayTable","supplyarea","playeronearea","cardinfo","playertwoarea","Menu","react_router_dom","to","startGame","Object","objectDestructuringEmpty","App","react_router","path","render","menu","playtable","Boolean","window","location","hostname","match","defaultState","cellarHand","emptyPiles","supplyReducer","prevState","arguments","undefined","action","shuffle","require","_objectSpread","endHand","toConsumableArray","slice","militiaDefend","endDiscard","shuffleDeck","_objectSpread3","_objectSpread4","_objectSpread6","pile","keys","find","toLowerCase","defineProperty","_objectSpread8","_objectSpread9","_objectSpread11","_objectSpread12","_objectSpread13","_objectSpread14","_objectSpread15","_objectSpread16","_objectSpread17","cycleHand","some","gameReducer","gamereducer_objectSpread","playerOneReducer","playeronereducer_objectSpread","value","victory_points","playerTwoReducer","playertworeducer_objectSpread","rootReducer","combineReducers","store","createStore","ReactDOM","es","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a393de97.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { connect } from 'react-redux'\n\nclass Card extends React.Component {\n\n  componentWillUnmount = () => {  \n    if (!this.props.trash.includes(this.props.card)) {\n      this.props.hoverOff() \n    }\n  }\n\n  handleClick = () => {\n\n    const { \n      className, card, player, playerTurn, playTreasureCard1, \n      playTreasureCard2, buyCard1, buyCard2, playAction1,\n      playAction2, wallet1, wallet2, buys1, buys2, actions1, \n      actions2, triggerDispatch1, triggerDispatch2, deck1, deck2,\n      mine, hand1, hand2, trashTreasure1, trashTreasure2,\n      trashRemodel1, trashRemodel2, gainRemodel1, gainRemodel2,\n      remodel, remodelGain, remodelValue, workshop, gainWorkshop1,\n      gainWorkshop2, militia, militiaDefend1, militiaDefend2,\n      militiaDiscardFirst,militiaDiscardSecond, militiaDiscardFirst1, militiaDiscardFirst2,\n      militiaDiscardSecond1, militiaDiscardSecond2, militiaBreak, cellar1, cellar2,\n      cellarDiscard1, cellarDiscard2\n    } = this.props\n    // PLAY TREASURE CARD OR TRASH TREASURE CARD IF MINE OR REMODEL PLAYED\n    if (\n      className === \"hand-card\" && \n      player === \"player1\" && \n      cellar1 === false &&\n      cellar2 === false &&\n      militia === false &&\n      card.card_type === \"Treasure\" && \n      playerTurn === false\n      ) {\n        if (mine === false && remodel === false) {\n          playTreasureCard1(card)\n        } else if (mine === true ) {\n          if (card.name === \"Copper\") {\n            trashTreasure1(card, \"silvers\")\n          } else if (card.name === \"Silver\") {\n            trashTreasure1(card, \"golds\")\n          }\n        } else if (remodel === true) {\n          trashRemodel1(card)\n        }\n    } else if (\n      className === \"hand-card\" && \n      player === \"player2\" && \n      cellar1 === false &&\n      cellar2 === false &&\n      militia === false &&\n      card.card_type === \"Treasure\" && \n      playerTurn === true\n      ) {\n        if (mine === false && remodel === false) {\n          playTreasureCard2(card)\n        } else if (mine === true ) {\n          if (card.name === \"Copper\") {\n            trashTreasure2(card, \"silvers\")\n          } else if (card.name === \"Silver\") {\n            trashTreasure2(card, \"golds\")\n          }\n        } else if (remodel === true) {\n          trashRemodel2(card)\n        }\n    } \n    // BUY SUPPLY CARD\n    else if (\n      className === \"supply-card\" && \n      playerTurn === false && \n      remodelGain === false &&\n      workshop === false &&\n      card.cost <= wallet1 && \n      buys1 > 0 \n      ) {\n      buyCard1(card)\n    } else if (\n      className === \"supply-card\" && \n      playerTurn === true && \n      remodelGain === false &&\n      workshop === false &&\n      card.cost <= wallet2 && \n      buys2 > 0 \n      ) {\n      buyCard2(card)\n    } \n    // WORKSHOP GAIN CARD\n    else if (\n      className === \"supply-card\" &&\n      playerTurn === false &&\n      workshop === true &&\n      card.cost <= 4\n    ) {\n      gainWorkshop1(card)\n    } else if (\n      className === \"supply-card\" &&\n      playerTurn === true &&\n      workshop === true &&\n      card.cost <= 4\n    ) {\n      gainWorkshop2(card)\n    }\n    // REMODEL GAIN CARD\n    else if (\n      className === \"supply-card\" &&\n      playerTurn === false &&\n      remodelGain === true &&\n      card.cost <= remodelValue\n    ) {\n      gainRemodel1(card)\n    }\n    else if (\n      className === \"supply-card\" &&\n      playerTurn === true &&\n      remodelGain === true &&\n      card.cost <= remodelValue\n    ) {\n      gainRemodel2(card)\n    }\n    // PLAY ACTION CARD\n    else if (\n      className === \"hand-card\" && \n      player ===\"player1\" &&\n      card.card_type === \"Action\" &&\n      militia === false &&\n      militiaDiscardFirst === false &&\n      militiaDiscardSecond === false &&\n      remodel === false &&\n      cellar1 === false && \n      cellar2 === false &&\n      playerTurn === false && \n      actions1 > 0 \n      ) {\n      playAction1(card, deck1)\n      card.triggers.forEach(trigger => {\n        triggerDispatch1(`${trigger}1`)\n      })\n    } else if (\n      className === \"hand-card\" && \n      player === \"player2\" &&\n      card.card_type === \"Action\" &&\n      militia === false &&\n      militiaDiscardFirst === false &&\n      militiaDiscardSecond === false &&\n      remodel === false &&\n      cellar1 === false &&\n      cellar2 === false &&\n      playerTurn === true && \n      actions2 > 0\n      ) {\n      playAction2(card, deck2)\n      card.triggers.forEach(trigger => {\n        triggerDispatch2(`${trigger}2`)\n      })\n    }\n    // CELLAR\n    else if (cellar1 === true ) {\n      if (\n        className === \"hand-card\" &&\n        player === \"player1\" &&\n        playerTurn === false &&\n        militia === false &&\n        remodel === false &&\n        militiaDiscardFirst === false &&\n        militiaDiscardSecond === false\n      ) {\n        cellarDiscard1(card)\n      }\n    } else if (cellar2 === true) {\n      if (\n        className === \"hand-card\" &&\n        player === \"player2\" &&\n        playerTurn === true &&\n        militia === false &&\n        remodel === false &&\n        militiaDiscardFirst === false &&\n        militiaDiscardSecond === false\n      ) {\n        cellarDiscard2(card)\n      }\n    } \n    // MILITIA RESPONSES\n      // MOAT OR MILITIA DISCARD FIRST\n    else if (militia === true && militiaDiscardFirst === true) {\n      if (\n        playerTurn === false &&\n        className === \"hand-card\" &&\n        player === \"player2\" &&\n        hand2.length > 3\n      ) {\n        if (card.name !== \"Moat\"){\n          militiaDiscardFirst1(card)\n        } else if (card.name === \"Moat\") {\n          militiaDefend1(card)\n        } else {\n          militiaBreak()\n        }\n      } else if (\n        playerTurn === true &&\n        className === \"hand-card\" &&\n        player === \"player1\" &&\n        hand1.length > 3\n      ) {\n        if (card.name !== \"Moat\"){\n          militiaDiscardFirst2(card)\n        } else if (card.name === \"Moat\") {\n          militiaDefend2(card)\n        } else {\n          militiaBreak()\n        }\n      }\n    }\n      // MILITIA DISCARD SECOND\n      else if (militiaDiscardSecond === true) {\n        if (\n          playerTurn === false &&\n          className === \"hand-card\" &&\n          player === \"player2\"\n        ) {\n          if (hand2.length > 3) {\n            militiaDiscardSecond1(card)\n          } else {\n            militiaBreak()\n          }\n        } else if (\n          playerTurn === true &&\n          className === \"hand-card\" &&\n          player === \"player1\"\n        ) {\n          if (hand1.length > 3) {\n            militiaDiscardSecond2(card)\n          } else {\n            militiaBreak()\n          }\n        }\n      }\n    // REMODEL ACTION OR VICTORY CARD\n    else if (\n      className === \"hand-card\" &&\n      player === \"player1\" &&\n      playerTurn === false &&\n      remodel === true &&\n      (card.card_type === \"Action\" || card.card_type === \"Victory\")\n    ) {\n      trashRemodel1(card)\n    } else if (\n      className === \"hand-card\" &&\n      player === \"player2\" &&\n      playerTurn === true &&\n      remodel === true &&\n      (card.card_type === \"Action\" || card.card_type === \"Victory\")\n    ) {\n      trashRemodel2(card)\n    }   \n  }\n  \n  render() {\n    const { index, id, card, player, playerTurn, className, militia, militiaDiscardSecond } = this.props\n    return(\n      <Fragment>\n        {\n          index === 0 \n          ?\n          <img src={\n              id === \"deck-card\" || ((className === \"hand-card\" && playerTurn === false && player === \"player2\" && !militia && !militiaDiscardSecond) || (className === \"hand-card\" && playerTurn === true && player === \"player1\" && !militia && !militiaDiscardSecond) ) \n            ? \n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQnxjXZTHcRqwUrA4nW09UvtRlXPGlhAZdOQC6_-s71LayIknwS\" \n            : \n              card.picture} alt=\"oops\" onClick={() => this.handleClick()} \n              onMouseEnter={\n                className === \"supply-card\" \n                || ((className === \"hand-card\" && playerTurn === false && player === \"player1\" && !militia && !militiaDiscardSecond) \n                || (className === \"hand-card\" && playerTurn === true && player === \"player2\" && !militia && !militiaDiscardSecond))\n                ? \n                  () => this.props.hoverOn(this) \n                : \n                  null\n              } \n              onMouseLeave={this.props.hoverOff} >\n          </img> \n          : \n          <img src={\n              id === \"deck-card\" || ((className === \"hand-card\" && playerTurn === false && player === \"player2\" && !militia && !militiaDiscardSecond) || (className === \"hand-card\" && playerTurn === true && player === \"player1\" && !militia && !militiaDiscardSecond)) \n            ? \n            \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQnxjXZTHcRqwUrA4nW09UvtRlXPGlhAZdOQC6_-s71LayIknwS\" \n            :\n            card.picture} alt=\"oops\" className=\"rest\" onClick={() => this.handleClick()} \n            onMouseEnter={\n              className === \"supply-card\" \n              || ((className === \"hand-card\" && playerTurn === false && player === \"player1\" && !militia && !militiaDiscardSecond) \n              || (className === \"hand-card\" && playerTurn === true && player === \"player2\" && !militia && !militiaDiscardSecond))\n              ? \n                () => this.props.hoverOn(this) \n              : \n                null\n            } \n            onMouseLeave={this.props.hoverOff}>\n          </img> \n          }\n      </Fragment>\n    )\n  }\n\n}\n\nfunction msp(state) {\n\n  const { \n    playerTurn, deck1, deck2, hand1, hand2, mine, remodel, remodelGain, \n    remodelValue, workshop, militia, militiaDiscardFirst, militiaDiscardSecond,\n    cellar1, cellar2, isHovered, trash\n  } = state.supply\n  const { wallet1, buys1, turns1, actions1 } = state.playerOne\n  const { wallet2, buys2, turns2, actions2 } = state.playerTwo\n\n  return {\n\n    isHovered,\n    playerTurn,\n    mine,\n    remodel,\n    remodelGain,\n    remodelValue,\n    workshop,\n    militia,\n    militiaDiscardFirst,\n    militiaDiscardSecond,\n    cellar1,\n    cellar2,\n    trash,\n\n\n    wallet1,\n    buys1,\n    turns1,\n    actions1,\n    deck1,\n    hand1,\n\n    wallet2,\n    buys2,\n    turns2,\n    actions2,\n    deck2,\n    hand2\n\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    buyCard1: (card) => {\n      dispatch({ type: \"BUY1\", payload: card})\n    },\n    buyCard2: (card) => {\n      dispatch({ type: \"BUY2\", payload: card})\n    },\n    playTreasureCard1: (card) => {\n      dispatch({ type: \"PLAY_TREASURE1\", payload: card })\n    },\n    playTreasureCard2: (card) => {\n      dispatch({ type: \"PLAY_TREASURE2\", payload: card })\n    },\n    playAction1: (card, deck) => {\n      dispatch({ type: \"ACTION1\", payload: card, deck: deck })\n    },\n    playAction2: (card, deck) => {\n      dispatch({ type: \"ACTION2\", payload: card, deck: deck })\n    },\n    triggerDispatch1: (trigger) => {\n      dispatch({ type: trigger })\n    },\n    triggerDispatch2: (trigger) => {\n      dispatch({ type: trigger })\n    },\n    trashTreasure1: (card, treasure) => {\n      dispatch({ type: \"TRASH_TREASURE1\", payload: card, treasure: treasure })\n    },\n    trashTreasure2: (card, treasure) => {\n      dispatch({ type: \"TRASH_TREASURE2\", payload: card, treasure: treasure })\n    },\n    trashRemodel1: (card) => {\n      dispatch({ type: \"TRASH_REMODEL1\", payload: card })\n    },\n    trashRemodel2: (card) => {\n      dispatch({ type: \"TRASH_REMODEL2\", payload: card })\n    },\n    trashVictory1: (card) => {\n      dispatch({ type: \"TRASH_VICTORY1\", payload: card})\n    },\n    trashVictory2: (card) => {\n      dispatch({ type: \"TRASH_VICTORY2\", payload: card })\n    },\n    gainRemodel1: (card) => {\n      dispatch({ type: \"GAIN_REMODEL1\", payload: card })\n    },\n    gainRemodel2: (card) => {\n      dispatch({ type: \"GAIN_REMODEL2\", payload: card })\n    },\n    gainWorkshop1: (card) => {\n      dispatch({ type: \"GAIN_WORKSHOP1\", payload: card })\n    },\n    gainWorkshop2: (card) => {\n      dispatch({ type: \"GAIN_WORKSHOP2\", payload: card })\n    },\n    militiaDefend1: (card) => {\n      dispatch({ type: \"MILITIA_DEFEND1\", payload: card })\n    },\n    militiaDefend2: (card) => {\n      dispatch({ type: \"MILITIA_DEFEND2\", payload: card })\n    },\n    militiaDiscardFirst1: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_FIRST1\", payload: card })\n    },\n    militiaDiscardFirst2: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_FIRST2\", payload: card })\n    },\n    militiaDiscardSecond1: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_SECOND1\", payload: card })\n    },\n    militiaDiscardSecond2: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_SECOND2\", payload: card })\n    },\n    militiaBreak: () => {\n      dispatch({ type: \"MILITIA_BREAK\" })\n    },\n    cellarDiscard1: (card) => {\n      dispatch({ type: \"CELLAR_DISCARD1\", payload: card })\n    },\n    cellarDiscard2: (card) => {\n      dispatch({ type: \"CELLAR_DISCARD2\", payload: card })\n    },\n    hoverOn: (card) => {\n      dispatch({ type: \"HOVER_ON\", payload: card })\n    },\n    hoverOff: () => {\n      dispatch({ type: \"HOVER_OFF\" })\n    }\n  }\n\n}\n\nexport default connect(msp, mdp)(Card)","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerDeck extends React.Component {\n\n  renderDeck = () => {\n    return this.props.deck.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} id=\"deck-card\" />\n    })\n  }\n\n  render() {\n    const { deck, handleDeal, turns } = this.props\n    return(\n      <div className=\"player-deck\" >\n        {\n          deck.length > 0 \n          ? \n          this.renderDeck() \n          : \n            turns === 0\n            ?\n              <button onClick={() => handleDeal()}>Deal Cards</button>\n            :\n              null\n       }\n      </div>\n    )\n  }\n}\n\nexport default PlayerDeck","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerDiscard extends React.Component {\n\n  renderDiscard = () => {\n    return this.props.discard.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"discard-card\" />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"player-discard\" >\n        {this.props.discard.length > 0 ? this.renderDiscard() : null}\n      </div>\n    )\n  }\n}\n\nexport default PlayerDiscard","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerHand extends React.Component {\n\n  renderHand = () => {\n    return this.props.hand.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} player={this.props.player} className=\"hand-card\" />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"player-hand\" >\n        {\n          this.props.hand.length > 0 \n          ? \n          this.renderHand() \n          :\n            this.props.turns === 0 && (!this.props.gameStart1 && !this.props.gameStart2) && this.props.deck.length > 0\n            ? \n            <button onClick={() => this.props.handleDraw()}>Draw Hand</button>\n            :\n            null\n        }\n      </div>\n    )\n  }\n}\n\nexport default PlayerHand","import React from 'react'\nimport PlayerDeck from './playerdeck'\nimport PlayerDiscard from './playerdiscard'\nimport PlayerHand from './playerhand'\nimport { connect } from 'react-redux'\n\nclass PlayerOneArea extends React.Component {\n\n  handleDeal = () => {\n    this.props.deal()\n  }\n\n  handleDraw = () => {\n    this.props.draw()\n  }\n\n  handleCycle = () => {\n    this.props.cycle()\n  }\n\n\n  render() {\n    const { discard1, deck1, hand1, turns1, gameStart1 } = this.props\n    return(\n      <div id=\"player-one-area\" >\n        <PlayerDiscard key=\"discard1\" discard={discard1} />\n        <PlayerDeck key=\"deck1\" deck={deck1} handleDeal={this.handleDeal} turns={turns1} handleCycle={this.handleCycle} />\n        <PlayerHand key=\"hand1\" hand={hand1} handleDraw={this.handleDraw} player=\"player1\" turns={turns1} gameStart1={gameStart1} deck={deck1} />\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { coppers, estates, deck1, discard1, hand1, gameStart1 } = state.supply\n  const { turns1 } = state.playerOne\n\n  return {\n    coppers,\n    estates,\n    deck1,\n    discard1,\n    hand1,\n    turns1,\n    gameStart1\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    deal: () => {\n      dispatch({ type: \"DEAL1\"})\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW1\" })\n    },\n    cycle: () => {\n      dispatch({ type: \"CYCLE1\" })\n    }\n\n  }\n}\n\nexport default connect(msp, mdp)(PlayerOneArea) ","import React from 'react'\nimport PlayerDeck from './playerdeck'\nimport PlayerDiscard from './playerdiscard'\nimport PlayerHand from './playerhand'\nimport { connect } from 'react-redux'\n\nclass PlayerTwoArea extends React.Component {\n\n  handleDeal = () => {\n    this.props.deal()\n  }\n\n  handleDraw = () => {\n    this.props.draw()\n  }\n\n  handleCycle = () => {\n    this.props.cycle()\n  }\n\n  render() {\n    const { hand2, discard2, deck2, turns2, gameStart2 } = this.props\n    return (\n      <div id=\"player-two-area\" >\n        <PlayerHand key=\"hand2\" hand={hand2} handleDraw={this.handleDraw} player=\"player2\" turns={turns2} gameStart2={gameStart2} deck={deck2} />\n        <PlayerDeck key=\"deck2\" deck={deck2} handleDeal={this.handleDeal} turns={turns2} handleCycle={this.handleCycle} />\n        <PlayerDiscard key=\"discard2\" discard={discard2}/>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { coppers, estates, deck2, discard2, hand2, gameStart2 } = state.supply\n  const { turns2 } = state.playerTwo\n\n  return {\n    coppers,\n    estates,\n    deck2,\n    discard2,\n    hand2,\n    turns2,\n    gameStart2\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    deal: () => {\n      dispatch({ type: \"DEAL2\" })\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW2\" })\n    },\n    cycle: () => {\n      dispatch({ type: \"CYCLE2\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(PlayerTwoArea) ","import React from 'react'\nimport Card from '../components/card'\nimport { connect } from 'react-redux'\n\nclass ActionCards extends React.Component {\n\n  componentDidMount() {\n    fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n      .then(resp => resp.json())\n      .then(cards => {\n        this.props.setCellars(cards.filter(card => {\n          return card.name === \"Cellar\"\n        }))\n        this.props.setMoats(cards.filter(card => {\n          return card.name === \"Moat\"\n        }))\n        this.props.setWorkshops(cards.filter(card => {\n          return card.name === \"Workshop\"\n        }))\n        this.props.setWoodcutters(cards.filter(card => {\n          return card.name === \"Woodcutter\"\n        }))\n        this.props.setVillages(cards.filter(card => {\n          return card.name === \"Village\"\n        }))\n        this.props.setMilitias(cards.filter(card => {\n          return card.name === \"Militia\"\n        }))\n        this.props.setSmithys(cards.filter(card => {\n          return card.name === \"Smithy\"\n        }))\n        this.props.setRemodels(cards.filter(card => {\n          return card.name === \"Remodel\"\n        }))\n        this.props.setMarkets(cards.filter(card => {\n          return card.name === \"Market\"\n        }))\n        this.props.setMines(cards.filter(card => {\n          return card.name === \"Mine\"\n        }))\n      })\n  }\n\n  renderCellars = () => {\n    return this.props.cellars.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderMoats = () => {\n    return this.props.moats.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderWorkshops = () => {\n    return this.props.workshops.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderWoodcutters = () => {\n    return this.props.woodcutters.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderVillages = () => {\n    return this.props.villages.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderSmithys = () => {\n    return this.props.smithys.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderMilitias = () => {\n    return this.props.militias.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderRemodels = () => {\n    return this.props.remodels.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderMarkets = () => {\n    return this.props.markets.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderMines = () => {\n    return this.props.mines.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n\n  render() {\n    return(\n      <div id=\"action-card-area\" >\n        <div id=\"cellars\">\n          {this.renderCellars()}\n        </div>\n        <div id=\"moats\">\n          {this.renderMoats()}\n        </div>\n        <div id=\"workshops\">\n          {this.renderWorkshops()}\n        </div>\n        <div id=\"woodcutters\">\n          {this.renderWoodcutters()}\n        </div>\n        <div id=\"villages\">\n          {this.renderVillages()}\n        </div>\n        <div id=\"smithys\">\n          {this.renderSmithys()}\n        </div>\n        <div id=\"militias\">\n          {this.renderMilitias()}\n        </div>\n        <div id=\"remodels\">\n          {this.renderRemodels()}\n        </div>\n        <div id=\"markets\">\n          {this.renderMarkets()}\n        </div>\n        <div id=\"mines\">\n          {this.renderMines()}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { cellars, moats, workshops, woodcutters, villages, militias, smithys, remodels, markets, mines } = state.supply\n\n  return {\n    cellars: cellars,\n    moats: moats,\n    workshops: workshops,\n    woodcutters: woodcutters,\n    villages: villages,\n    militias: militias,\n    smithys: smithys,\n    remodels: remodels,\n    markets: markets,\n    mines: mines\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    setCellars: (cellars) => {\n      dispatch({ type: \"CELLARS\", payload: cellars })\n    },\n    setMoats: (moats) => {\n      dispatch({ type: \"MOATS\", payload: moats })\n    },\n    setWorkshops: (workshops) => {\n      dispatch({ type: \"WORKSHOPS\", payload: workshops })\n    },\n    setWoodcutters: (woodcutters) => {\n      dispatch({ type: \"WOODCUTTERS\", payload: woodcutters })\n    },\n    setVillages: (villages) => {\n      dispatch({ type: \"VILLAGES\", payload: villages })\n    },\n    setMilitias: (militias) => {\n      dispatch({ type: \"MILITIAS\", payload: militias })\n    },\n    setSmithys: (smithys) => {\n      dispatch({ type: \"SMITHYS\", payload: smithys })\n    },\n    setRemodels: (remodels) => {\n      dispatch({ type: \"REMODELS\", payload: remodels })\n    },\n    setMarkets: (markets) => {\n      dispatch({ type: \"MARKETS\", payload: markets })\n    },\n    setMines: (mines) => {\n      dispatch({ type: \"MINES\", payload: mines })\n    },\n  }\n}\n\nexport default connect(msp, mdp)(ActionCards)\n\n","import React from 'react'\nimport Card from '../components/card'\nimport { connect } from 'react-redux'\n\nclass TreasureCards extends React.Component {\n\n  componentDidMount() {\n    fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n      .then(resp => resp.json())\n      .then(cards => {\n        this.props.setCoppers(cards.filter(card => {\n          return card.name === \"Copper\"\n        }))\n        this.props.setSilvers(cards.filter(card => {\n          return card.name === \"Silver\"\n        }))\n        this.props.setGolds(cards.filter(card => {\n          return card.name === \"Gold\"\n        }))\n      })\n  }\n\n  renderCoppers = () => {\n    return this.props.coppers.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderSilvers = () => {\n    return this.props.silvers.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderGolds = () => {\n    return this.props.golds.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  render() {\n    return(\n      <div id=\"treasure-card-area\">\n        <div id=\"coppers\">\n          {this.renderCoppers()}\n        </div>\n        <div id=\"silvers\">\n          {this.renderSilvers()}\n        </div>\n        <div id=\"golds\">\n          {this.renderGolds()}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { coppers, silvers, golds } = state.supply\n  const { gameStart } = state.game\n\n  return {\n    coppers: coppers,\n    silvers: silvers,\n    golds: golds,\n    gameStart: gameStart\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    setCoppers: (coppers) => {\n      dispatch({ type: \"COPPERS\", payload: coppers })\n    },\n    setSilvers: (silvers) => {\n      dispatch({ type: \"SILVERS\", payload: silvers })\n    },\n    setGolds: (golds) => {\n      dispatch({ type: \"GOLDS\", payload: golds })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(TreasureCards) ","import React from 'react'\nimport Card from '../components/card'\nimport { connect } from 'react-redux'\n\nclass VictoryCards extends React.Component {\n\n  componentDidMount() {\n    fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n      .then(resp => resp.json())\n      .then(cards => {\n        this.props.setEstates(cards.filter(card => {\n          return card.name === \"Estate\"\n        }))\n        this.props.setDuchys(cards.filter(card => {\n          return card.name === \"Duchy\"\n        }))\n        this.props.setProvinces(cards.filter(card => {\n          return card.name === \"Province\"\n        }))\n      })\n  }\n\n  renderEstates = () => {\n    return this.props.estates.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderDuchys = () => {\n    return this.props.duchys.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  renderProvinces = () => {\n    return this.props.provinces.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n    })\n  }\n\n  render() {\n    return(\n      <div id=\"victory-card-area\">\n        <div id=\"estates\">\n          {this.renderEstates()}\n        </div>\n        <div id=\"duchys\">\n          {this.renderDuchys()}\n        </div>\n        <div id=\"provinces\">\n          {this.renderProvinces()}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { estates, duchys, provinces } = state.supply\n\n  return {\n    estates,\n    duchys,\n    provinces\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    setEstates: (estates) => {\n      dispatch({ type: \"ESTATES\", payload: estates })\n    },\n    setDuchys: (duchys) => {\n      dispatch({ type: \"DUCHYS\", payload: duchys })\n    },\n    setProvinces: (provinces) => {\n      dispatch({ type: \"PROVINCES\", payload: provinces })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(VictoryCards) ","import React from 'react'\n\nfunction PlayerTurnInfo(props) {\n\n  return(\n    <div className=\"player-turn-info\" >\n      <div className=\"player-tag\"><h3>{props.player}</h3></div>\n      <div className=\"player-actions\">{`Actions: ${props.actions}`}</div>\n      <div className=\"player-buys\">{`Buys: ${props.buys}`}</div>\n      <div className=\"player-wallet\">{`Wallet: ${props.wallet}`}</div>\n      <div className=\"player-vps\">{`VPs: ${props.victoryPoints}`}</div>\n    </div>\n  )\n}\n\n\nexport default PlayerTurnInfo","import React, { Fragment } from 'react'\nimport ActionCards from './actioncards'\nimport TreasureCards from './treasurecards'\nimport VictoryCards from './victorycards'\nimport PlayerTurnInfo from '../components/playerturninfo'\nimport { connect } from 'react-redux'\n\nclass SupplyArea extends React.Component {\n\n  handleClick1 = () => {\n    this.props.endCellar1()\n  }\n\n  handleClick2 = () => {\n    this.props.endCellar2()\n  }\n\n  render() {\n    const { \n      actions1, buys1, wallet1, victoryPoints1, turns1, actions2, \n      buys2, wallet2, victoryPoints2, turns2, playerTurn, endTurn1,\n      endTurn2, cellar1, cellar2, gameEnd, militia, remodelGain, \n      remodelValue, workshop, remodel, militiaDiscardSecond, mine,\n      gameStart1, gameStart2 } = this.props\n      \n    return(\n      <div id=\"supply-area\">\n        <div className=\"margins\">\n          <PlayerTurnInfo \n            key=\"player1\"\n            player=\"Player 1\"\n            actions={actions1}\n            buys={buys1}\n            wallet={wallet1}\n            victoryPoints={victoryPoints1}\n            turns={turns1}\n          />\n          <div className=\"end-turn\">\n            {\n              cellar1 \n              ? \n              <button className=\"cellar-button\" onClick={this.handleClick1} >End Discard</button> \n              : \n                playerTurn === false && remodel\n                ?\n                <div className=\"message\" >\n                  Trash card and gain card from supply worth up to 2 more\n                </div>\n                : \n                  playerTurn === false && remodelGain\n                  ?\n                  <div className=\"message\" >\n                    Gain card from supply costing up to {remodelValue}\n                  </div>\n                  :\n                    playerTurn === false && mine\n                    ?\n                    <div className=\"message\">\n                      Trash a treasure card for treasure costing up to 3 more\n                    </div>\n                    :\n                      playerTurn === false && workshop\n                      ?\n                      <div className=\"message\" >\n                        Gain card from supply costing up to 4\n                      </div>\n                      :\n                        playerTurn === true && (militia || militiaDiscardSecond)\n                        ?\n                        <div className=\"message\" >\n                          Discard 2 cards or play Moat\n                        </div>\n                        :\n                          playerTurn === false && !cellar1 && !gameEnd && gameStart1 && gameStart2 && (!militia && !militiaDiscardSecond)\n                          ? \n                          <button onClick={endTurn1} >End Turn</button> \n                          : \n                          null\n            }\n          </div>\n        </div>\n        {\n          gameEnd \n          ?\n          <div id=\"game-end\">\n            {\n            victoryPoints1 > victoryPoints2\n            ?\n            \"Player 1 Wins!\"\n            :\n            \"Player 2 Wins!\"\n            }\n          </div>\n          :\n          <Fragment>\n            <div id=\"tvcard-container\">\n              <TreasureCards />\n              <VictoryCards />\n            </div>      \n            <ActionCards />\n          </Fragment>\n        }\n        <div className=\"margins\" >\n          <PlayerTurnInfo \n            key=\"player2\"\n            player=\"Player 2\"\n            actions={actions2}\n            buys={buys2}\n            wallet={wallet2}\n            victoryPoints={victoryPoints2}\n            turns={turns2}\n          />\n          <div className=\"end-turn\" >\n            {\n              cellar2\n                ?\n                <button className=\"cellar-button\" onClick={this.handleClick2} >End Discard</button>\n                :\n                playerTurn === true && remodel\n                  ?\n                  <div className=\"message\" >\n                    Trash card and gain card from supply costing up to 2 more\n                  </div>\n                  :\n                  playerTurn === true && remodelGain\n                    ?\n                    <div className=\"message\" >\n                      Gain card from supply costing up to {remodelValue}\n                    </div>\n                    :\n                      playerTurn === true && mine\n                      ?\n                      <div className=\"message\">\n                        Trash a treasure card for treasure costing up to 3 more\n                      </div>\n                      :\n                        playerTurn === true && workshop\n                          ?\n                          <div className=\"message\" >\n                            Gain card from supply costing up to 4\n                          </div>\n                          :\n                          playerTurn === false && (militia || militiaDiscardSecond)\n                            ?\n                            <div className=\"message\" >\n                              Discard 2 cards or play Moat\n                            </div>\n                            :\n                            playerTurn === true && !cellar2 && !gameEnd && gameStart1 && gameStart2 && (!militia && !militiaDiscardSecond)\n                              ?\n                              <button onClick={endTurn2} >End Turn</button>\n                              :\n                              null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { actions1, buys1, wallet1, victoryPoints1, turns1 } = state.playerOne\n  const { actions2, buys2, wallet2, victoryPoints2, turns2 } = state.playerTwo\n  const { playerTurn } = state.game\n  const { cellar1, cellar2, gameEnd, militia, militiaDiscardFirst, \n          militiaDiscardSecond, workshopGain, remodelGain, remodelValue,\n          workshop, remodel, mine, gameStart1, gameStart2 } = state.supply\n\n  return {\n    actions1,\n    buys1,\n    wallet1,\n    victoryPoints1,\n    turns1,\n    gameStart1,\n\n    actions2,\n    buys2,\n    wallet2,\n    victoryPoints2,\n    turns2,\n    gameStart2,\n\n    playerTurn,\n    gameEnd,\n\n    cellar1,\n    cellar2,\n    militia,\n    militiaDiscardFirst,\n    militiaDiscardSecond,\n    workshopGain,\n    workshop,\n    remodel,\n    remodelGain,\n    remodelValue,\n    mine\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    endTurn1: () => {\n      dispatch({ type: \"TURN1\" })\n    },\n    endTurn2: () => {\n      dispatch({ type: \"TURN2\" })\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW1\" })\n    },\n    endCellar1: () => {\n      dispatch({ type: \"END_CELLAR1\" })\n    },\n    endCellar2: () => {\n      dispatch({ type: \"END_CELLAR2\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(SupplyArea)","import React from 'react'\nimport Card from './card'\nimport { connect } from 'react-redux'\n\nclass Trash extends React.Component {\n\n  componentDidMount() {\n    if (this.props.trash.length === 0) {\n      fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n        .then(resp => resp.json())\n        .then(cards => {\n          this.props.setTrash(cards.filter(card => {\n            return card.name === \"Trash\"\n          }))\n        })\n    }\n  }\n\n  renderTrash = () => {\n    return this.props.trash.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} />\n    })\n  }\n\n  render() {\n    console.log(\"TRASH\", this.props.trash)\n    return(\n      <div id=\"trash\" >\n        {this.renderTrash()}\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { trash } = state.supply\n\n  return {\n    trash: trash\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    setTrash: (trash) => {\n      dispatch({ type: \"TRASH\", payload: trash })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(Trash)","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass CardInfo extends React.Component {\n\n  render() {\n    const { card } = this.props.hoverCard.props\n    return (\n      <div className=\"card-info\" >\n        <h4>{ card.name }</h4>\n        <p>{ card.description }</p>\n        <p>Cost: { card.cost }</p>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { hoverCard } = state.supply\n\n  return {\n    hoverCard\n  }\n\n}\n\n\nexport default connect(msp, null)(CardInfo)","import React from 'react'\nimport PlayerOneArea from './playeronearea'\nimport PlayerTwoArea from './playertwoarea'\nimport SupplyArea from './supplyarea'\nimport Trash from '../components/trash'\nimport CardInfo from '../components/cardinfo'\nimport { connect } from 'react-redux'\n\nclass PlayTable extends React.Component {\n\n  render() {\n    return(\n      <div id=\"play-table\">\n        <SupplyArea />\n        <div id=\"player-area-container\">\n          <PlayerOneArea />\n          { this.props.isHovered ? <CardInfo key=\"card-info\" /> : <Trash />}\n          <PlayerTwoArea />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { isHovered } = state.supply\n\n  return {\n    isHovered\n  }\n\n}\n\nexport default connect(msp, null)(PlayTable)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass Menu extends React.Component {\n\n  render() {\n    return(\n      <div id=\"menu\" >\n        <div id=\"menu-list\">\n          <Link to=\"/playgame\" onClick={this.props.startGame}>Start Game</Link>\n          <Link to=\"/instructions\" >Instructions</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const {  } = state.supply\n\n  return {\n    \n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    startGame: () => {\n      dispatch({ type: \"START\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(Menu) ","import React from 'react'\nimport './App.css'\nimport './Supply.css'\nimport './Menu.css'\nimport PlayTable from './containers/playtable'\nimport Menu from './containers/menu'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Link } from \"react-router-dom\"\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route \n          path=\"/menu\"\n          render={() => \n            <Menu />\n          }\n          />\n          <Route \n            path=\"/\"\n            render={() =>\n              <PlayTable />\n            }\n          />\n        </Switch>\n      </div>\n    )\n  }\n} // end of App component\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultState = {\n// PLAYER 1 TURN ON FALSE, PLAYER 2 TURN ON TRUE\n  isHovered: false,\n  hoverCard: null,\n  playerTurn: false,\n  mine: false,\n  remodel: false,\n  remodelGain: false,\n  remodelValue: 0,\n  workshop: false,\n  workshopGain: false,\n  militia: false,\n  militiaDiscardFirst: false,\n  militiaDiscardSecond: false,\n  cellar1: false,\n  cellar2: false,\n  cellarHand: [],\n  gameStart1: false,\n  gameStart2: false,\n\n  cellars: [],\n  moats: [],\n  workshops: [],\n  woodcutters: [],\n  villages: [],\n  militias: [],\n  smithys: [],\n  remodels: [],\n  markets: [],\n  mines: [],\n  coppers: [],\n  silvers: [],\n  golds: [],\n  estates: [],\n  duchys: [],\n  provinces: [],\n  trash: [],\n  emptyPiles: 0,\n  gameEnd: false,\n\n  // PLAYER 1 ARRAYS\n  deck1: [],\n  discard1: [],\n  hand1: [],\n  // PLAYER 2 ARRAYS\n  deck2: [],\n  discard2: [],\n  hand2: []\n\n}\n\nfunction supplyReducer(prevState=defaultState, action) {\n  console.log(\"EMPTY PILES\", prevState.emptyPiles)\n  let shuffle = require('shuffle-array')\n  switch (action.type) {\n    // INITIAL SUPPLY RENDER\n    case \"CELLARS\":\n      return {...prevState, cellars: action.payload }\n    case \"MOATS\":\n      return { ...prevState, moats: action.payload }\n    case \"WORKSHOPS\":\n      return { ...prevState, workshops: action.payload }\n    case \"WOODCUTTERS\":\n      return { ...prevState, woodcutters: action.payload }  \n    case \"VILLAGES\":\n      return { ...prevState, villages: action.payload }\n    case \"MILITIAS\":\n      return { ...prevState, militias: action.payload }\n    case \"SMITHYS\":\n      return { ...prevState, smithys: action.payload }\n    case \"REMODELS\":\n      return { ...prevState, remodels: action.payload }\n    case \"MARKETS\":\n      return { ...prevState, markets: action.payload }\n    case \"MINES\":\n      return { ...prevState, mines: action.payload }\n    case \"COPPERS\":\n      return {...prevState, coppers: action.payload}\n    case \"SILVERS\":\n      return { ...prevState, silvers: action.payload }\n    case \"GOLDS\":\n      return { ...prevState, golds: action.payload }\n    case \"ESTATES\":\n      return { ...prevState, estates: action.payload }\n    case \"DUCHYS\":\n      return { ...prevState, duchys: action.payload }\n    case \"PROVINCES\":\n      return { ...prevState, provinces: action.payload }\n    case \"TRASH\": {\n      console.log(\"PAYLOAD\",)\n      return { ...prevState, trash: prevState.trash.concat(action.payload) }\n    }\n    // PLAYER ACTIONS  \n    case \"TURN1\": {\n      let endHand = [...prevState.hand1]\n      if (prevState.deck1.length >= 5) {\n        return { \n          ...prevState, \n          playerTurn: !prevState.playerTurn, \n          discard1: prevState.discard1.concat(endHand), \n          hand1: [...prevState.deck1.slice(-5)], \n          deck1: [...prevState.deck1.slice(0, -5)],\n          mine: false, \n          remodel: false, \n          remodelGain: false, \n          workshop: false, \n          workshopGain: false, \n          militia: false, \n          militiaDefend: false, \n          militiaDiscardFirst: false, \n          militiaDiscardSecond: false, \n          cellar1: false \n        }\n      } else if (prevState.deck1.length < 5) {\n        let endDiscard = [...prevState.discard1.concat(endHand)]\n        let shuffleDeck = shuffle([...prevState.deck1.concat(endDiscard)])\n        return {\n          ...prevState,\n          playerTurn: !prevState.playerTurn,\n          discard1: [],\n          hand1: [...shuffleDeck.slice(-5)],\n          deck1: [...shuffleDeck.slice(0, -5)],\n          mine: false,\n          remodel: false,\n          remodelGain: false,\n          workshop: false,\n          workshopGain: false,\n          militia: false,\n          militiaDefend: false,\n          militiaDiscardFirst: false,\n          militiaDiscardSecond: false,\n          cellar1: false \n        }\n      }\n    }\n    case \"TURN2\": {\n      let endHand = [...prevState.hand2]\n      if (prevState.deck2.length >= 5) {\n        return { \n          ...prevState, \n          playerTurn: !prevState.playerTurn, \n          discard2: prevState.discard2.concat(endHand), \n          hand2: [...prevState.deck2.slice(-5)], \n          deck2: [...prevState.deck2.slice(0, -5)],\n          mine: false, \n          remodel: false, \n          remodelGain: false, \n          workshop: false, \n          workshopGain: false, \n          militia: false, \n          militiaDefend: false, \n          militiaDiscardFirst: false, \n          militiaDiscardSecond: false, \n          cellar2: false,\n          cellarHand: [] \n        }\n      } else if (prevState.deck2.length < 5) {\n        let endDiscard = [...prevState.discard2.concat(endHand)]\n        let shuffleDeck = shuffle([...prevState.deck2.concat(endDiscard)])\n        return {\n          ...prevState,\n          playerTurn: !prevState.playerTurn,\n          discard2: [],\n          hand2: [...shuffleDeck.slice(-5)],\n          deck2: [...shuffleDeck.slice(0, -5)],\n          mine: false,\n          remodel: false,\n          remodelGain: false,\n          workshop: false,\n          workshopGain: false,\n          militia: false,\n          militiaDefend: false,\n          militiaDiscardFirst: false,\n          militiaDiscardSecond: false,\n          cellar2: false,\n          cellarHand: [] \n        }\n      }\n    }\n    case \"PLAY_TREASURE1\":\n      return {...prevState, discard1: prevState.discard1.concat(action.payload), hand1: prevState.hand1.filter(card => card.id !== action.payload.id) }\n    case \"PLAY_TREASURE2\":\n      return { ...prevState, discard2: prevState.discard2.concat(action.payload), hand2: prevState.hand2.filter(card => card.id !== action.payload.id) }\n    case \"BUY1\": {\n      let pile = Object.keys(prevState).find(key => key == `${action.payload.name.toLowerCase()}s`)\n      if (prevState[pile].length > 1 && pile !== \"provinces\") {\n        return { ...prevState, discard1: prevState.discard1.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id) }\n      } else if (prevState[pile].length === 1 && pile !== \"provinces\") {\n        if (prevState.emptyPiles < 2) {\n          return { ...prevState, discard1: prevState.discard1.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), emptyPiles: prevState.emptyPiles + 1 }\n        } else {\n          return { ...prevState, discard1: prevState.discard1.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), gameEnd: true }\n        }\n      } else if (pile === \"provinces\") {\n        if (prevState[pile].length > 1) {\n          return { ...prevState, discard1: prevState.discard1.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id) }\n        } else {\n            return { ...prevState, discard1: prevState.discard1.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), gameEnd: true }\n          }\n      } \n    }\n    case \"BUY2\": {\n      let pile = Object.keys(prevState).find(key => key == `${action.payload.name.toLowerCase()}s`)\n      if (prevState[pile].length > 1 && pile !== \"provinces\") {\n        return { ...prevState, discard2: prevState.discard2.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id) }   \n      } else if (prevState[pile].length === 1 && pile !== \"provinces\") {\n        if (prevState.emptyPiles < 3) {\n          return { ...prevState, discard2: prevState.discard2.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), emptyPiles: prevState.emptyPiles + 1 }   \n        } else {\n          return { ...prevState, discard2: prevState.discard2.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), gameEnd: true }   \n        }\n      } else if (pile === \"provinces\") {\n        if (prevState[pile].length > 1) {\n          return { ...prevState, discard2: prevState.discard2.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id) }   \n        } else {\n          return { ...prevState, discard2: prevState.discard2.concat(action.payload), [pile]: prevState[pile].filter(card => card.id !== action.payload.id), gameEnd: true }   \n        }\n      }\n    }\n    case \"ACTION1\": \n        return { ...prevState, discard1: prevState.discard1.concat(action.payload), hand1: prevState.hand1.filter(card => card.id !== action.payload.id) }\n    case \"ACTION2\": \n        return { ...prevState, discard2: prevState.discard2.concat(action.payload), hand2: prevState.hand2.filter(card => card.id !== action.payload.id) }\n    case \"TRASH_TREASURE1\": {\n      let pile = action.treasure\n      return { ...prevState, trash: prevState.trash.concat(action.payload), hand1: prevState.hand1.filter(card => card.id !== action.payload.id).concat(prevState[pile].slice(-1)), [pile]: prevState[pile].slice(0, -1), mine: false }  \n    }\n    case \"TRASH_TREASURE2\": {\n      let pile = action.treasure\n      return { ...prevState, trash: prevState.trash.concat(action.payload), hand2: prevState.hand2.filter(card => card.id !== action.payload.id).concat(prevState[pile].slice(-1)), [pile]: prevState[pile].slice(0, -1), mine: false }  \n    }\n    case \"TRASH_REMODEL1\": {\n      return { ...prevState, remodel: false, remodelGain: true, trash: prevState.trash.concat(action.payload), hand1: prevState.hand1.filter(card => card.id !== action.payload.id), remodelValue: action.payload.cost + 2  }\n    }\n    case \"TRASH_REMODEL2\": {\n      return { ...prevState, remodel: false, remodelGain: true, trash: prevState.trash.concat(action.payload), hand2: prevState.hand2.filter(card => card.id !== action.payload.id), remodelValue: action.payload.cost + 2 }\n    }\n    case \"GAIN_REMODEL1\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { ...prevState, remodelGain: false, [pile]: prevState[pile].slice(0, -1), discard1: prevState.discard1.concat(prevState[pile].slice(-1)) }\n    }\n    case \"GAIN_REMODEL2\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { ...prevState, remodelGain: false, [pile]: prevState[pile].slice(0, -1), discard2: prevState.discard2.concat(prevState[pile].slice(-1)) }\n    }\n    case \"GAIN_WORKSHOP1\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { ...prevState, workshop: false, [pile]: prevState[pile].slice(0, -1), discard1: prevState.discard1.concat(prevState[pile].slice(-1)) }\n    }\n    case \"GAIN_WORKSHOP2\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { ...prevState, workshop: false, [pile]: prevState[pile].slice(0, -1), discard2: prevState.discard2.concat(prevState[pile].slice(-1)) }\n    }\n    case \"MILITIA_DISCARD_FIRST1\": {\n      return { ...prevState, militia: false, militiaDiscardFirst: false, militiaDiscardSecond: true, hand2: prevState.hand2.filter(card => card.id !== action.payload.id), discard2: prevState.discard2.concat(action.payload) }\n    }\n    case \"MILITIA_DISCARD_FIRST2\": {\n      return { ...prevState, militia: false, militiaDiscardFirst: false, militiaDiscardSecond: true, hand1: prevState.hand1.filter(card => card.id !== action.payload.id), discard1: prevState.discard1.concat(action.payload) }\n    }\n    case \"MILITIA_DISCARD_SECOND1\": {\n      return { ...prevState, militiaDiscardSecond: false, hand2: prevState.hand2.filter(card => card.id !== action.payload.id), discard2: prevState.discard2.concat(action.payload) }\n    }\n    case \"MILITIA_DISCARD_SECOND2\": {\n      return { ...prevState, militiaDiscardSecond: false, hand1: prevState.hand1.filter(card => card.id !== action.payload.id), discard1: prevState.discard1.concat(action.payload) }\n    }\n    case \"MILITIA_DEFEND1\": {\n      return { ...prevState, militia: false, militiaDiscardFirst: false, militiaDiscardSecond: false, hand2: prevState.hand2.filter(card => card.id !== action.payload.id), discard2: prevState.discard2.concat(action.payload) }\n    }\n    case \"MILITIA_DEFEND2\": {\n      return { ...prevState, militia: false, militiaDiscardFirst: false, militiaDiscardSecond: false, hand1: prevState.hand1.filter(card => card.id !== action.payload.id), discard1: prevState.discard1.concat(action.payload) }\n    }\n    case \"MILITIA_BREAK\": {\n      return { ...prevState, militia: false, militiaDiscardFirst: false, militiaDiscardSecond: false }\n    }\n    case \"DEAL1\":\n      return { ...prevState, deck1: shuffle(prevState.estates.slice(-3).concat(prevState.coppers.slice(-7))), estates: prevState.estates.slice(0, -3), coppers: prevState.coppers.slice(0, -7) }\n    case \"DEAL2\":\n      return { ...prevState, deck2: shuffle(prevState.estates.slice(-3).concat(prevState.coppers.slice(-7))), estates: prevState.estates.slice(0, -3), coppers: prevState.coppers.slice(0, -7) }\n    case \"CYCLE1\": {\n        return { ...prevState, deck1: shuffle(prevState.discard1), discard1: [] }\n    }\n    case \"CYCLE2\": {\n        return { ...prevState, deck2: shuffle(prevState.discard2), discard2: [] }\n    }\n    case \"DRAW1\": {\n      if (prevState.deck1.length >= 5) {\n        return { ...prevState, hand1: prevState.deck1.slice(-5), deck1: prevState.deck1.slice(0, -5), gameStart1: true }\n      } else {\n        return { ...prevState, deck1: shuffle(prevState.deck1.concat(prevState.discard1)), discard1: [] }\n      }\n    }\n    case \"DRAW2\":\n      if (prevState.deck2.length >= 5) {\n        return { ...prevState, hand2: prevState.deck2.slice(-5), deck2: prevState.deck2.slice(0, -5), gameStart2: true }\n      } else {\n        return { ...prevState, deck2: shuffle(prevState.deck2.concat(prevState.discard2)), discard2: [] }\n      }\n    case \"CELLAR_DISCARD1\": {\n      if (prevState.cellarHand.includes(action.payload)) {\n        if (prevState.deck1.length >= 1) {\n          return { \n            ...prevState, \n            hand1: prevState.hand1.filter(card => card.id !== action.payload.id).concat(prevState.deck1.slice(-1)), \n            discard1: prevState.discard1.concat(action.payload), \n            deck1: prevState.deck1.slice(0, -1) \n          }\n        } else {\n            let cycleHand = prevState.hand1.filter(card => card.id !== action.payload.id)\n            let cycleDiscard = prevState.discard1.concat(action.payload)\n            let shuffleDeck = shuffle(cycleDiscard)\n            return {\n              ...prevState,\n              hand1: cycleHand.concat(shuffleDeck.slice(-1)),\n              deck1: shuffleDeck.slice(0, -1),\n              discard1: []\n          }\n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"CELLAR_DISCARD2\": {\n      if (prevState.cellarHand.includes(action.payload)) {\n        if (prevState.deck2.length >= 1) {\n          return { \n            ...prevState, \n            hand2: prevState.hand2.filter(card => card.id !== action.payload.id).concat(prevState.deck2.slice(-1)), \n            discard2: prevState.discard2.concat(action.payload), \n            deck2: prevState.deck2.slice(0, -1) \n          }\n        } else {\n            let cycleHand = prevState.hand2.filter(card => card.id !== action.payload.id)\n            let cycleDiscard = prevState.discard2.concat(action.payload)\n            let shuffleDeck = shuffle(cycleDiscard) \n            return {\n              ...prevState,\n              hand2: cycleHand.concat(shuffleDeck.slice(-1)),\n              deck2: shuffleDeck.slice(0, -1),\n              discard2: []\n          }\n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"END_CELLAR1\":\n      return { ...prevState, cellar1: false }\n    case \"END_CELLAR2\":\n      return { ...prevState, cellar2: false }\n    // CARD TRIGGERS\n    case \"+1CARD1\": {\n      if (prevState.deck1.length > 0) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-1)), \n          deck1: prevState.deck1.slice(0, -1) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return { \n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-1)), \n          deck1: shuffleDeck.slice(0, -1), \n          discard1: [] \n        }\n      }\n    }\n    case \"+2CARDS1\": {\n      if (prevState.deck1.length > 1) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-2)), \n          deck1: prevState.deck1.slice(0, -2) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return {\n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-2)),\n          deck1: shuffleDeck.slice(0, -2),\n          discard1: []\n        }\n      }\n    }\n    case \"+3CARDS1\": {\n      if (prevState.deck1.length > 2) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-3)), \n          deck1: prevState.deck1.slice(0, -3) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return {\n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-3)),\n          deck1: shuffleDeck.slice(0, -3),\n          discard1: []\n        }\n      }\n    }\n    case \"+1CARD2\": {\n      if (prevState.deck2.length > 0) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-1)), \n          deck2: prevState.deck2.slice(0, -1) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-1)),\n          deck2: shuffleDeck.slice(0, -1),\n          discard2: []\n        }\n      }\n    }\n    case \"+2CARDS2\": {\n      if (prevState.deck2.length > 1) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-2)), \n          deck2: prevState.deck2.slice(0, -2) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-2)),\n          deck2: shuffleDeck.slice(0, -2),\n          discard2: []\n        }\n      }\n    }\n    case \"+3CARDS2\": {\n      if (prevState.deck2.length > 2) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-3)), \n          deck2: prevState.deck2.slice(0, -3) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-3)),\n          deck2: shuffleDeck.slice(0, -3),\n          discard2: []\n        }\n      }\n    }\n    case \"MINE1\": {\n      if (prevState.hand1.some(card => card.name === \"Copper\" || card.name === \"Silver\")) {\n        return { ...prevState, mine: true }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"MINE2\": {\n      if (prevState.hand2.some(card => card.name === \"Copper\" || card.name === \"Silver\")) {\n        return { ...prevState, mine: true }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"REMODEL1\": {\n      if (prevState.hand1.length > 0) {\n        return { ...prevState, remodel: true }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"REMODEL2\": {\n      if (prevState.hand2.length > 0) {\n        return { ...prevState, remodel: true}\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"WORKSHOP1\":\n      return { ...prevState, workshop: true }\n    case \"WORKSHOP2\":\n      return { ...prevState, workshop: true }\n    case \"ATTACK1\": {\n      if (prevState.hand2.length > 3) {\n        return { ...prevState, militia: true, militiaDiscardFirst: true }\n      } else {\n        return { ...prevState }\n      }\n    }\n    case \"ATTACK2\": {\n      if (prevState.hand1.length > 3) {\n        return { ...prevState, militia: true, militiaDiscardFirst: true }\n      } else {\n        return { ...prevState }\n      }\n      }\n    case \"CELLAR1\":\n      return { ...prevState, cellar1: true, cellarHand: [...prevState.hand1] }\n    case \"CELLAR2\":\n      return { ...prevState, cellar2: true, cellarHand: [...prevState.hand2] }\n    case \"HOVER_ON\":\n      return { ...prevState, isHovered: true, hoverCard: action.payload }\n    case \"HOVER_OFF\":\n      return { ...prevState, isHovered: false, hoverCard: action.payload }\n    default:\n      return prevState\n  }\n\n}\n\nexport default supplyReducer ","const defaultState = {\n  playerTurn: false,\n  gameEnd: false,\n}\n\n//Player 1 turn on false, Player 2 turn on true\nfunction gameReducer(prevState=defaultState, action) {\n  switch (action.type) {\n    case \"TURN1\":\n      return { ...prevState, playerTurn: !prevState.playerTurn}\n    case \"TURN2\":\n      return { ...prevState, playerTurn: !prevState.playerTurn }\n    case \"END\":\n      return {...prevState, gameEnd: true}\n    default:\n      return prevState\n  }\n\n}\n\nexport default gameReducer ","const defaultState = {\n  actions1: 1,\n  buys1: 1,\n  wallet1: 0,\n  victoryPoints1: 3,\n  turns1: 0\n}\n\nfunction playerOneReducer(prevState = defaultState, action) {\n  switch (action.type) {\n    case \"PLAY_TREASURE1\":\n      return { ...prevState, wallet1: prevState.wallet1 + action.payload.value }\n    case \"BUY1\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, wallet1: prevState.wallet1 - action.payload.cost, buys1: prevState.buys1 - 1, victoryPoints1: prevState.victoryPoints1 + action.payload.victory_points }\n      }\n      else {\n        return { ...prevState, wallet1: prevState.wallet1 - action.payload.cost, buys1: prevState.buys1 - 1 }\n      }\n    }\n    case \"TURN1\":\n      return { ...prevState, actions1: 1, buys1: 1, wallet1: 0, turns1: prevState.turns1 + 1 }\n    case \"ACTION1\": \n        return { ...prevState, actions1: prevState.actions1 - 1 }\n    case \"+1ACTION1\":\n      return { ...prevState, actions1: prevState.actions1 + 1 }\n    case \"+2ACTIONS1\":\n      return { ...prevState, actions1: prevState.actions1 + 2 }\n    case \"+1BUY1\":\n      return { ...prevState, buys1: prevState.buys1 + 1 }\n    case \"+1WALLET1\":\n      return { ...prevState, wallet1: prevState.wallet1 + 1 }\n    case \"+2WALLET1\":\n      return { ...prevState, wallet1: prevState.wallet1 + 2 }\n    case \"TRASH_REMODEL1\":\n      return { ...prevState, victoryPoints1: prevState.victoryPoints1 - action.payload.victory_points }\n    case \"GAIN_REMODEL1\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, victoryPoints1: prevState.victoryPoints1 + action.payload.victory_points }\n      }\n    }\n    default:\n      return prevState\n  }\n\n}\n\nexport default playerOneReducer","const defaultState = {\n  actions2: 1,\n  buys2: 1,\n  wallet2: 0,\n  victoryPoints2: 3,\n  turns2: 0\n}\n\nfunction playerTwoReducer(prevState=defaultState, action) {\n\n  switch (action.type) {\n    case \"PLAY_TREASURE2\":\n      return { ...prevState, wallet2: prevState.wallet2 + action.payload.value }\n    case \"BUY2\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, wallet2: prevState.wallet2 - action.payload.cost, buys2: prevState.buys2 - 1, victoryPoints2: prevState.victoryPoints2 + action.payload.victory_points }\n      }\n      else {\n        return { ...prevState, wallet2: prevState.wallet2 - action.payload.cost, buys2: prevState.buys2 - 1 }\n      }\n    }\n    case \"TURN2\":\n      return { ...prevState, actions2: 1, buys2: 1, wallet2: 0, turns2: prevState.turns2 + 1 }\n    case \"ACTION2\": \n        return { ...prevState, actions2: prevState.actions2 - 1 }    \n    case \"+1ACTION2\":\n      return { ...prevState, actions2: prevState.actions2 + 1 }\n    case \"+2ACTIONS2\":\n      return { ...prevState, actions2: prevState.actions2 + 2 }\n    case \"+1BUY2\":\n      return { ...prevState, buys2: prevState.buys2 + 1 }\n    case \"+1WALLET2\":\n      return { ...prevState, wallet2: prevState.wallet2 + 1 }\n    case \"+2WALLET2\":\n      return { ...prevState, wallet2: prevState.wallet2 + 2 }\n    case \"TRASH_REMODEL2\":\n      return { ...prevState, victoryPoints2: prevState.victoryPoints2 - action.payload.victory_points }\n    case \"GAIN_REMODEL2\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, victoryPoints2: prevState.victoryPoints2 + action.payload.victory_points }\n      }\n    }\n    default:\n      return prevState\n  }\n\n}\n\nexport default playerTwoReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport supplyReducer from './reducers/supplyreducer'\nimport gameReducer from './reducers/gamereducer'\nimport playerOneReducer from './reducers/playeronereducer'\nimport playerTwoReducer from './reducers/playertworeducer'\n\nconst rootReducer = combineReducers({supply: supplyReducer, game: gameReducer, playerOne: playerOneReducer, playerTwo: playerTwoReducer})\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><Router><Route path=\"/\" component={App} /></Router></Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}