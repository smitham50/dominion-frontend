{"version":3,"sources":["components/card.js","logic/handleHandCard.js","logic/handleTreasureCard.js","logic/handleRemodel.js","logic/handleActionCard.js","logic/handleSupplyCard.js","containers/playerdeck.js","containers/playerdiscard.js","containers/playerhand.js","containers/playeronearea.js","containers/playertwoarea.js","containers/supplycards.js","components/playerturninfo.js","containers/supplyarea.js","components/trash.js","components/cardinfo.js","containers/playtable.js","containers/menu.js","App.js","serviceWorker.js","reducers/supplyreducer.js","reducers/gamereducer.js","reducers/playeronereducer.js","reducers/playertworeducer.js","index.js"],"names":["Card","componentWillUnmount","_this","props","trash","includes","card","hoverOff","handleClick","className","player","hand1","hand2","militia","militiaDefend1","militiaDefend2","militiaDiscardFirst","militiaDiscardSecond","militiaDiscardFirst1","militiaDiscardFirst2","militiaDiscardSecond1","militiaDiscardSecond2","militiaBreak","cellar1","cellar2","cellarDiscard1","cellarDiscard2","playerTurn","remodel","name","length","card_type","playTreasureCard1","playTreasureCard2","trashTreasure1","trashTreasure2","mine","trashRemodel1","trashRemodel2","handleTreasureCard","handleRemodel","playAction1","playAction2","actions1","actions2","triggerDispatch1","triggerDispatch2","deck1","deck2","triggers","forEach","trigger","concat","handleActionCard","handleHandCard","buyCard1","buyCard2","wallet1","wallet2","buys1","buys2","gainRemodel1","gainRemodel2","remodelGain","remodelValue","workshop","gainWorkshop1","gainWorkshop2","cost","handleSupplyCard","_this2","this","_this$props","index","id","react_default","a","createElement","react","src","process","picture","alt","onClick","onMouseEnter","hoverOn","onMouseLeave","React","Component","connect","state","_state$supply","supply","isHovered","_state$playerOne","playerOne","turns1","_state$playerTwo","playerTwo","turns2","dispatch","type","payload","deck","treasure","trashVictory1","trashVictory2","PlayerDeck","renderDeck","map","components_card","key","handleDeal","turns","PlayerDiscard","renderDiscard","discard","PlayerHand","renderHand","hand","gameStart1","gameStart2","handleDraw","PlayerOneArea","deal","draw","handleCycle","cycle","discard1","playerdiscard","playerdeck","playerhand","coppers","estates","PlayerTwoArea","discard2","SupplyCards","renderCoppers","renderSilvers","silvers","renderGolds","golds","renderEstates","renderDuchys","duchys","renderProvinces","provinces","renderCellars","cellars","renderMoats","moats","renderWorkshops","workshops","renderWoodcutters","woodcutters","renderVillages","villages","renderSmithys","smithys","renderMilitias","militias","renderRemodels","remodels","renderMarkets","markets","renderMines","mines","fetch","then","resp","json","cards","setCoppers","filter","setSilvers","setGolds","setEstates","setDuchys","setProvinces","setCellars","setMoats","setWorkshops","setWoodcutters","setVillages","setMilitias","setSmithys","setRemodels","setMarkets","setMines","PlayerTurnInfo","actions","buys","wallet","victoryPoints","SupplyArea","handleClick1","endCellar1","handleClick2","endCellar2","victoryPoints1","victoryPoints2","endTurn1","endTurn2","gameEnd","playerturninfo","supplycards","game","workshopGain","Trash","renderTrash","setTrash","CardInfo","hoverCard","description","PlayTable","supplyarea","playeronearea","cardinfo","playertwoarea","Menu","react_router_dom","to","startGame","Object","objectDestructuringEmpty","App","react_router","path","render","menu","playtable","Boolean","window","location","hostname","match","defaultState","cellarHand","emptyPiles","supplyReducer","prevState","arguments","undefined","action","shuffle","require","objectSpread2","endHand","toConsumableArray","endDiscard","shuffleDeck","slice","militiaDefend","_objectSpread3","_objectSpread4","_objectSpread6","pile","keys","find","toLowerCase","defineProperty","_objectSpread8","_objectSpread9","_objectSpread11","_objectSpread12","_objectSpread13","_objectSpread14","_objectSpread15","_objectSpread16","_objectSpread17","cycleHand","some","gameReducer","playerOneReducer","value","victory_points","playerTwoReducer","rootReducer","combineReducers","store","createStore","ReactDOM","es","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c335dc6.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport handleHandCard from '../logic/handleHandCard';\nimport handleSupplyCard from '../logic/handleSupplyCard';\n\nclass Card extends React.Component {\n\n  componentWillUnmount = () => {  \n    if (!this.props.trash.includes(this.props.card)) {\n      this.props.hoverOff() \n    }\n  };\n\n  handleClick = () => {\n    const { className } = this.props\n\n    if (className === \"hand-card\") {\n      handleHandCard(this.props);\n    } else if (className === \"supply-card\") {\n      handleSupplyCard(this.props);\n    }\n\n  };\n  \n  render() {\n    const { \n      index, id, card, player, playerTurn, \n      className, militia, militiaDiscardSecond \n    } = this.props\n    \n    return(\n      <Fragment>\n        {\n          index === 0 \n          ?\n          <img src={\n            id === \"deck-card\" || \n            (className === \"hand-card\" && !militia && !militiaDiscardSecond && \n            ((!playerTurn && player === \"player2\") ||\n            (playerTurn && player === \"player1\"))) \n            ? \n              process.env.PUBLIC_URL + \"/card-images/cardback.jpg\" \n            : \n              process.env.PUBLIC_URL + card.picture} alt=\"oops\" onClick={() => this.handleClick()} \n              onMouseEnter={\n                className === \"supply-card\" ||\n                (className === \"hand-card\" && !militia && !militiaDiscardSecond &&\n                ((!playerTurn && player === \"player1\") ||\n                (playerTurn && player === \"player2\")))\n                ? \n                  () => this.props.hoverOn(this) \n                : \n                  null\n              } \n              onMouseLeave={this.props.hoverOff} >\n          </img> \n          : \n          <img src={\n              id === \"deck-card\" ||\n              (className === \"hand-card\" && !militia && !militiaDiscardSecond &&\n              ((!playerTurn && player === \"player2\") ||\n              (playerTurn && player === \"player1\"))) \n            ? \n              process.env.PUBLIC_URL + \"/card-images/cardback.jpg\" \n            :\n            process.env.PUBLIC_URL + card.picture} alt=\"oops\" className=\"rest\" onClick={() => this.handleClick()} \n            onMouseEnter={\n              className === \"supply-card\" || \n              (className === \"hand-card\" && !militia && !militiaDiscardSecond &&\n              ((!playerTurn && player === \"player1\") ||\n              (playerTurn && player === \"player2\")))\n              ? \n                () => this.props.hoverOn(this) \n              : \n                null\n            } \n            onMouseLeave={this.props.hoverOff}>\n          </img> \n          }\n      </Fragment>\n    )\n  };\n\n};\n\nfunction msp(state) {\n\n  const { \n    playerTurn, deck1, deck2, hand1, hand2, mine, remodel, remodelGain, \n    remodelValue, workshop, militia, militiaDiscardFirst, militiaDiscardSecond,\n    cellar1, cellar2, isHovered, trash\n  } = state.supply;\n  const { wallet1, buys1, turns1, actions1 } = state.playerOne;\n  const { wallet2, buys2, turns2, actions2 } = state.playerTwo;\n\n  return {\n\n    isHovered,\n    playerTurn,\n    mine,\n    remodel,\n    remodelGain,\n    remodelValue,\n    workshop,\n    militia,\n    militiaDiscardFirst,\n    militiaDiscardSecond,\n    cellar1,\n    cellar2,\n    trash,\n\n\n    wallet1,\n    buys1,\n    turns1,\n    actions1,\n    deck1,\n    hand1,\n\n    wallet2,\n    buys2,\n    turns2,\n    actions2,\n    deck2,\n    hand2\n\n  };\n\n};\n\nfunction mdp(dispatch) {\n  return {\n    buyCard1: (card) => {\n      dispatch({ type: \"BUY1\", payload: card})\n    },\n    buyCard2: (card) => {\n      dispatch({ type: \"BUY2\", payload: card})\n    },\n    playTreasureCard1: (card) => {\n      dispatch({ type: \"PLAY_TREASURE1\", payload: card })\n    },\n    playTreasureCard2: (card) => {\n      dispatch({ type: \"PLAY_TREASURE2\", payload: card })\n    },\n    playAction1: (card, deck) => {\n      dispatch({ type: \"ACTION1\", payload: card, deck: deck })\n    },\n    playAction2: (card, deck) => {\n      dispatch({ type: \"ACTION2\", payload: card, deck: deck })\n    },\n    triggerDispatch1: (trigger) => {\n      dispatch({ type: trigger })\n    },\n    triggerDispatch2: (trigger) => {\n      dispatch({ type: trigger })\n    },\n    trashTreasure1: (card, treasure) => {\n      dispatch({ type: \"TRASH_TREASURE1\", payload: card, treasure: treasure })\n    },\n    trashTreasure2: (card, treasure) => {\n      dispatch({ type: \"TRASH_TREASURE2\", payload: card, treasure: treasure })\n    },\n    trashRemodel1: (card) => {\n      dispatch({ type: \"TRASH_REMODEL1\", payload: card })\n    },\n    trashRemodel2: (card) => {\n      dispatch({ type: \"TRASH_REMODEL2\", payload: card })\n    },\n    trashVictory1: (card) => {\n      dispatch({ type: \"TRASH_VICTORY1\", payload: card})\n    },\n    trashVictory2: (card) => {\n      dispatch({ type: \"TRASH_VICTORY2\", payload: card })\n    },\n    gainRemodel1: (card) => {\n      dispatch({ type: \"GAIN_REMODEL1\", payload: card })\n    },\n    gainRemodel2: (card) => {\n      dispatch({ type: \"GAIN_REMODEL2\", payload: card })\n    },\n    gainWorkshop1: (card) => {\n      dispatch({ type: \"GAIN_WORKSHOP1\", payload: card })\n    },\n    gainWorkshop2: (card) => {\n      dispatch({ type: \"GAIN_WORKSHOP2\", payload: card })\n    },\n    militiaDefend1: (card) => {\n      dispatch({ type: \"MILITIA_DEFEND1\", payload: card })\n    },\n    militiaDefend2: (card) => {\n      dispatch({ type: \"MILITIA_DEFEND2\", payload: card })\n    },\n    militiaDiscardFirst1: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_FIRST1\", payload: card })\n    },\n    militiaDiscardFirst2: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_FIRST2\", payload: card })\n    },\n    militiaDiscardSecond1: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_SECOND1\", payload: card })\n    },\n    militiaDiscardSecond2: (card) => {\n      dispatch({ type: \"MILITIA_DISCARD_SECOND2\", payload: card })\n    },\n    militiaBreak: () => {\n      dispatch({ type: \"MILITIA_BREAK\" })\n    },\n    cellarDiscard1: (card) => {\n      dispatch({ type: \"CELLAR_DISCARD1\", payload: card })\n    },\n    cellarDiscard2: (card) => {\n      dispatch({ type: \"CELLAR_DISCARD2\", payload: card })\n    },\n    hoverOn: (card) => {\n      dispatch({ type: \"HOVER_ON\", payload: card })\n    },\n    hoverOff: () => {\n      dispatch({ type: \"HOVER_OFF\" })\n    }\n  };\n\n};\n\nexport default connect(msp, mdp)(Card);","import handleTreasureCard from './handleTreasureCard';\nimport handleActionCard from './handleActionCard';\nimport handleRemodel from './handleRemodel';\n\nexport default function handleHandCard(props) {\n    const { \n        player,  hand1, hand2, militia, militiaDefend1, militiaDefend2,\n        militiaDiscardFirst, militiaDiscardSecond, militiaDiscardFirst1, \n        militiaDiscardFirst2, militiaDiscardSecond1, militiaDiscardSecond2,\n        militiaBreak, cellar1, cellar2, cellarDiscard1, cellarDiscard2,\n        card, playerTurn, remodel\n    } = props;\n\n    if (!militia && !militiaDiscardSecond) {\n        // PLAY TREASURE CARD OR TRASH TREASURE CARD IF MINE OR REMODEL PLAYED\n        if (!cellar1 && !cellar2) {\n            if (card.card_type === \"Treasure\") {\n                handleTreasureCard(props);\n            }\n            // PLAY ACTION CARD\n            else if (card.card_type === \"Action\" && !remodel) {\n                handleActionCard(props);\n            }\n            // REMODEL ACTION OR VICTORY CARD\n            else if (\n                remodel &&\n                (card.card_type === \"Action\" || card.card_type === \"Victory\")\n            ) {\n                handleRemodel(props);\n            }\n        }\n        // CELLAR\n        else if (\n            cellar1 &&\n            player === \"player1\" &&\n            !playerTurn\n        ) {\n            cellarDiscard1(card);\n        } else if (\n            cellar2 &&\n            player === \"player2\" &&\n            playerTurn\n        ) {\n            cellarDiscard2(card);\n        }\n    }\n    // MILITIA RESPONSES\n    // MOAT OR MILITIA DISCARD FIRST\n    else if (militia && militiaDiscardFirst) {\n        if (!playerTurn && player === \"player2\") {\n            if (card.name !== \"Moat\") {\n                militiaDiscardFirst1(card)\n            } else {\n                militiaDefend1(card)\n            }\n        } else if (playerTurn && player === \"player1\") {\n            if (card.name !== \"Moat\") {\n                militiaDiscardFirst2(card)\n            } else {\n                militiaDefend2(card)\n            }\n        }\n    }\n    // MILITIA DISCARD SECOND\n    else if (militiaDiscardSecond) {\n        if (\n            !playerTurn &&\n            player === \"player2\" &&\n            hand2.length > 3\n        ) {\n            militiaDiscardSecond1(card)\n        } else if (\n            playerTurn &&\n            player === \"player1\" &&\n            hand1.length > 3\n        ) {\n            militiaDiscardSecond2(card)\n        } else if (hand1.length <= 3 || hand2.length <= 3) {\n            militiaBreak()\n        }\n    }\n}","export default function handleTreasureCard(props) {\n    const {\n        playTreasureCard1, playTreasureCard2, trashTreasure1,\n        trashTreasure2, mine, card, remodel, trashRemodel1,\n        trashRemodel2, player, playerTurn\n    } = props;\n\n    if (player === \"player1\" && !playerTurn) {\n        if (!mine && !remodel) {\n            playTreasureCard1(card)\n        } else if (mine) {\n            if (card.name === \"Copper\") {\n                trashTreasure1(card, \"silvers\")\n            } else if (card.name === \"Silver\") {\n                trashTreasure1(card, \"golds\")\n            }\n        } else if (remodel) {\n            trashRemodel1(card)\n        }\n    }\n    else if (player === \"player2\" && playerTurn) {\n        if (!mine && !remodel) {\n            playTreasureCard2(card)\n        } else if (mine) {\n            if (card.name === \"Copper\") {\n                trashTreasure2(card, \"silvers\")\n            } else if (card.name === \"Silver\") {\n                trashTreasure2(card, \"golds\")\n            }\n        } else if (remodel) {\n            trashRemodel2(card)\n        }\n    }\n}","export default function handleRemodel(props) {\n    const {\n        trashRemodel1, trashRemodel2, player,\n        playerTurn, card\n    } = props;\n\n    if (player === \"player1\" && !playerTurn) {\n        trashRemodel1(card);\n    } else if (player === \"player2\" && playerTurn) {\n        trashRemodel2(card);\n    }\n}","export default function handleActionCard(props) {\n    const {\n        playAction1, playAction2, actions1, actions2,\n        triggerDispatch1, triggerDispatch2, deck1, deck2,\n        player, playerTurn, card\n    } = props;\n\n    if (player === \"player1\" && !playerTurn && actions1 > 0) {\n        playAction1(card, deck1)\n        card.triggers.forEach(trigger => {\n            triggerDispatch1(`${trigger}1`)\n        })\n    } else if (player === \"player2\" && playerTurn && actions2 > 0) {\n        playAction2(card, deck2)\n        card.triggers.forEach(trigger => {\n            triggerDispatch2(`${trigger}2`)\n        })\n    }\n}","export default function handleSupplyCard(props) {\n    const {\n        card, playerTurn, buyCard1, buyCard2, wallet1, wallet2,\n        buys1, buys2, gainRemodel1, gainRemodel2, remodelGain, remodelValue,\n        workshop, gainWorkshop1, gainWorkshop2\n    } = props;\n\n    // BUY SUPPLY CARD\n    if (!remodelGain && !workshop) {\n        if (\n            !playerTurn &&\n            buys1 > 0 &&\n            card.cost <= wallet1\n        ) {\n            buyCard1(card);\n        } else if (\n            playerTurn &&\n            buys2 > 0 &&\n            card.cost <= wallet2\n        ) {\n            buyCard2(card);\n        }\n    }\n    // WORKSHOP GAIN CARD\n    else if (workshop && card.cost <= 4) {\n        if (!playerTurn) {\n            gainWorkshop1(card);\n        } else if (playerTurn) {\n            gainWorkshop2(card);\n        }\n    }\n    // REMODEL GAIN CARD\n    else if (remodelGain && card.cost <= remodelValue) {\n        if (!playerTurn) {\n            gainRemodel1(card);\n        } else if (playerTurn) {\n            gainRemodel2(card);\n        }\n    }\n};","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerDeck extends React.Component {\n\n  renderDeck = () => {\n    return this.props.deck.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} id=\"deck-card\" />\n    })\n  }\n\n  render() {\n    const { deck, handleDeal, turns } = this.props\n    return(\n      <div className=\"player-deck\" >\n        {\n          deck.length > 0 \n          ? \n          this.renderDeck() \n          : \n            turns === 0\n            ?\n              <button onClick={() => handleDeal()}>Deal Cards</button>\n            :\n              null\n       }\n      </div>\n    )\n  }\n}\n\nexport default PlayerDeck","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerDiscard extends React.Component {\n\n  renderDiscard = () => {\n    return this.props.discard.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} className=\"discard-card\" />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"player-discard\" >\n        {this.props.discard.length > 0 ? this.renderDiscard() : null}\n      </div>\n    )\n  }\n}\n\nexport default PlayerDiscard","import React from 'react'\nimport Card from '../components/card'\n\nclass PlayerHand extends React.Component {\n\n  renderHand = () => {\n    return this.props.hand.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} player={this.props.player} className=\"hand-card\" />\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"player-hand\" >\n        {\n          this.props.hand.length > 0 \n          ? \n          this.renderHand() \n          :\n            this.props.turns === 0 && (!this.props.gameStart1 && !this.props.gameStart2) && this.props.deck.length > 0\n            ? \n            <button onClick={() => this.props.handleDraw()}>Draw Hand</button>\n            :\n            null\n        }\n      </div>\n    )\n  }\n}\n\nexport default PlayerHand","import React from 'react'\nimport PlayerDeck from './playerdeck'\nimport PlayerDiscard from './playerdiscard'\nimport PlayerHand from './playerhand'\nimport { connect } from 'react-redux'\n\nclass PlayerOneArea extends React.Component {\n\n  handleDeal = () => {\n    this.props.deal()\n  }\n\n  handleDraw = () => {\n    this.props.draw()\n  }\n\n  handleCycle = () => {\n    this.props.cycle()\n  }\n\n\n  render() {\n    const { discard1, deck1, hand1, turns1, gameStart1 } = this.props\n    return(\n      <div id=\"player-one-area\" >\n        <PlayerDiscard key=\"discard1\" discard={discard1} />\n        <PlayerDeck key=\"deck1\" deck={deck1} handleDeal={this.handleDeal} turns={turns1} handleCycle={this.handleCycle} />\n        <PlayerHand key=\"hand1\" hand={hand1} handleDraw={this.handleDraw} player=\"player1\" turns={turns1} gameStart1={gameStart1} deck={deck1} />\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { coppers, estates, deck1, discard1, hand1, gameStart1 } = state.supply\n  const { turns1 } = state.playerOne\n\n  return {\n    coppers,\n    estates,\n    deck1,\n    discard1,\n    hand1,\n    turns1,\n    gameStart1\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    deal: () => {\n      dispatch({ type: \"DEAL1\"})\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW1\" })\n    },\n    cycle: () => {\n      dispatch({ type: \"CYCLE1\" })\n    }\n\n  }\n}\n\nexport default connect(msp, mdp)(PlayerOneArea) ","import React from 'react'\nimport PlayerDeck from './playerdeck'\nimport PlayerDiscard from './playerdiscard'\nimport PlayerHand from './playerhand'\nimport { connect } from 'react-redux'\n\nclass PlayerTwoArea extends React.Component {\n\n  handleDeal = () => {\n    this.props.deal()\n  }\n\n  handleDraw = () => {\n    this.props.draw()\n  }\n\n  handleCycle = () => {\n    this.props.cycle()\n  }\n\n  render() {\n    const { hand2, discard2, deck2, turns2, gameStart2 } = this.props\n    return (\n      <div id=\"player-two-area\" >\n        <PlayerHand key=\"hand2\" hand={hand2} handleDraw={this.handleDraw} player=\"player2\" turns={turns2} gameStart2={gameStart2} deck={deck2} />\n        <PlayerDeck key=\"deck2\" deck={deck2} handleDeal={this.handleDeal} turns={turns2} handleCycle={this.handleCycle} />\n        <PlayerDiscard key=\"discard2\" discard={discard2}/>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { coppers, estates, deck2, discard2, hand2, gameStart2 } = state.supply\n  const { turns2 } = state.playerTwo\n\n  return {\n    coppers,\n    estates,\n    deck2,\n    discard2,\n    hand2,\n    turns2,\n    gameStart2\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    deal: () => {\n      dispatch({ type: \"DEAL2\" })\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW2\" })\n    },\n    cycle: () => {\n      dispatch({ type: \"CYCLE2\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(PlayerTwoArea) ","import React from 'react'\nimport Card from '../components/card'\nimport { connect } from 'react-redux'\n\nclass SupplyCards extends React.Component {\n\n    componentDidMount() {\n        fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n            .then(resp => resp.json())\n            .then(cards => {\n                this.props.setCoppers(cards.filter(card => {\n                    return card.name === \"Copper\"\n                }))\n                this.props.setSilvers(cards.filter(card => {\n                    return card.name === \"Silver\"\n                }))\n                this.props.setGolds(cards.filter(card => {\n                    return card.name === \"Gold\"\n                }))\n                this.props.setEstates(cards.filter(card => {\n                    return card.name === \"Estate\"\n                }))\n                this.props.setDuchys(cards.filter(card => {\n                    return card.name === \"Duchy\"\n                }))\n                this.props.setProvinces(cards.filter(card => {\n                    return card.name === \"Province\"\n                }))\n                this.props.setCellars(cards.filter(card => {\n                    return card.name === \"Cellar\"\n                }))\n                this.props.setMoats(cards.filter(card => {\n                    return card.name === \"Moat\"\n                }))\n                this.props.setWorkshops(cards.filter(card => {\n                    return card.name === \"Workshop\"\n                }))\n                this.props.setWoodcutters(cards.filter(card => {\n                    return card.name === \"Woodcutter\"\n                }))\n                this.props.setVillages(cards.filter(card => {\n                    return card.name === \"Village\"\n                }))\n                this.props.setMilitias(cards.filter(card => {\n                    return card.name === \"Militia\"\n                }))\n                this.props.setSmithys(cards.filter(card => {\n                    return card.name === \"Smithy\"\n                }))\n                this.props.setRemodels(cards.filter(card => {\n                    return card.name === \"Remodel\"\n                }))\n                this.props.setMarkets(cards.filter(card => {\n                    return card.name === \"Market\"\n                }))\n                this.props.setMines(cards.filter(card => {\n                    return card.name === \"Mine\"\n                }))\n            })\n    }\n\n    renderCoppers = () => {\n        return this.props.coppers.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderSilvers = () => {\n        return this.props.silvers.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderGolds = () => {\n        return this.props.golds.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderEstates = () => {\n        return this.props.estates.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderDuchys = () => {\n        return this.props.duchys.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderProvinces = () => {\n        return this.props.provinces.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderCellars = () => {\n        return this.props.cellars.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderMoats = () => {\n        return this.props.moats.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderWorkshops = () => {\n        return this.props.workshops.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderWoodcutters = () => {\n        return this.props.woodcutters.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderVillages = () => {\n        return this.props.villages.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderSmithys = () => {\n        return this.props.smithys.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderMilitias = () => {\n        return this.props.militias.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderRemodels = () => {\n        return this.props.remodels.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderMarkets = () => {\n        return this.props.markets.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    renderMines = () => {\n        return this.props.mines.map((card, index) => {\n            return <Card key={card.id} card={card} index={index} className=\"supply-card\" />\n        })\n    }\n\n    render() {\n        return (\n            <div id=\"supply-card-container\">\n                <div id=\"coppers\" className=\"card-container\">\n                    {this.renderCoppers()}\n                </div>\n                <div id=\"silvers\" className=\"card-container\">\n                    {this.renderSilvers()}\n                </div>\n                <div id=\"golds\" className=\"card-container\">\n                    {this.renderGolds()}\n                </div>\n                <div id=\"cellars\" className=\"card-container\">\n                    {this.renderCellars()}\n                </div>\n                <div id=\"moats\" className=\"card-container\">\n                    {this.renderMoats()}\n                </div>\n                <div id=\"workshops\" className=\"card-container\">\n                    {this.renderWorkshops()}\n                </div>\n                <div id=\"woodcutters\" className=\"card-container\">\n                    {this.renderWoodcutters()}\n                </div>\n                <div id=\"villages\" className=\"card-container\">\n                    {this.renderVillages()}\n                </div>\n                <div id=\"estates\" className=\"card-container\">\n                    {this.renderEstates()}\n                </div>\n                <div id=\"duchys\" className=\"card-container\">\n                    {this.renderDuchys()}\n                </div>\n                <div id=\"provinces\" className=\"card-container\">\n                    {this.renderProvinces()}\n                </div>\n                <div id=\"smithys\" className=\"card-container\">\n                    {this.renderSmithys()}\n                </div>\n                <div id=\"militias\" className=\"card-container\">\n                    {this.renderMilitias()}\n                </div>\n                <div id=\"remodels\" className=\"card-container\">\n                    {this.renderRemodels()}\n                </div>\n                <div id=\"markets\" className=\"card-container\">\n                    {this.renderMarkets()}\n                </div>\n                <div id=\"mines\" className=\"card-container\">\n                    {this.renderMines()}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction msp(state) {\n\n    const { \n        coppers, silvers, golds, estates, duchys, provinces, cellars, \n        moats, workshops, woodcutters, villages, militias, smithys, \n        remodels, markets, mines \n    } = state.supply\n\n    return {\n        coppers,\n        silvers,\n        golds,\n        estates,\n        duchys,\n        provinces,\n        cellars,\n        moats,\n        workshops,\n        woodcutters,\n        villages,\n        militias,\n        smithys,\n        remodels,\n        markets,\n        mines\n    }\n\n}\n\nfunction mdp(dispatch) {\n    return {\n        setCoppers: (coppers) => {\n            dispatch({ type: \"COPPERS\", payload: coppers })\n        },\n        setSilvers: (silvers) => {\n            dispatch({ type: \"SILVERS\", payload: silvers })\n        },\n        setGolds: (golds) => {\n            dispatch({ type: \"GOLDS\", payload: golds })\n        },\n        setEstates: (estates) => {\n            dispatch({ type: \"ESTATES\", payload: estates })\n        },\n        setDuchys: (duchys) => {\n            dispatch({ type: \"DUCHYS\", payload: duchys })\n        },\n        setProvinces: (provinces) => {\n            dispatch({ type: \"PROVINCES\", payload: provinces })\n        },\n        setCellars: (cellars) => {\n            dispatch({ type: \"CELLARS\", payload: cellars })\n        },\n        setMoats: (moats) => {\n            dispatch({ type: \"MOATS\", payload: moats })\n        },\n        setWorkshops: (workshops) => {\n            dispatch({ type: \"WORKSHOPS\", payload: workshops })\n        },\n        setWoodcutters: (woodcutters) => {\n            dispatch({ type: \"WOODCUTTERS\", payload: woodcutters })\n        },\n        setVillages: (villages) => {\n            dispatch({ type: \"VILLAGES\", payload: villages })\n        },\n        setMilitias: (militias) => {\n            dispatch({ type: \"MILITIAS\", payload: militias })\n        },\n        setSmithys: (smithys) => {\n            dispatch({ type: \"SMITHYS\", payload: smithys })\n        },\n        setRemodels: (remodels) => {\n            dispatch({ type: \"REMODELS\", payload: remodels })\n        },\n        setMarkets: (markets) => {\n            dispatch({ type: \"MARKETS\", payload: markets })\n        },\n        setMines: (mines) => {\n            dispatch({ type: \"MINES\", payload: mines })\n        }\n    }\n}\n\nexport default connect(msp, mdp)(SupplyCards) ","import React from 'react'\n\nfunction PlayerTurnInfo(props) {\n\n  return(\n    <div className=\"player-turn-info\" >\n      <div className=\"player-tag\"><h3>{props.player}</h3></div>\n      <div className=\"player-actions\">{`Actions: ${props.actions}`}</div>\n      <div className=\"player-buys\">{`Buys: ${props.buys}`}</div>\n      <div className=\"player-wallet\">{`Wallet: ${props.wallet}`}</div>\n      <div className=\"player-vps\">{`VPs: ${props.victoryPoints}`}</div>\n    </div>\n  )\n}\n\n\nexport default PlayerTurnInfo","import React, { Fragment } from 'react'\nimport SupplyCards from './supplycards'\nimport PlayerTurnInfo from '../components/playerturninfo'\nimport { connect } from 'react-redux'\n\nclass SupplyArea extends React.Component {\n\n  handleClick1 = () => {\n    this.props.endCellar1()\n  }\n\n  handleClick2 = () => {\n    this.props.endCellar2()\n  }\n\n  render() {\n    const { \n      actions1, buys1, wallet1, victoryPoints1, turns1, actions2, \n      buys2, wallet2, victoryPoints2, turns2, playerTurn, endTurn1,\n      endTurn2, cellar1, cellar2, gameEnd, militia, remodelGain, \n      remodelValue, workshop, remodel, militiaDiscardSecond, mine,\n      gameStart1, gameStart2 } = this.props\n      \n    return(\n      <div id=\"supply-area\">\n        <div className=\"margins\">\n          <PlayerTurnInfo \n            key=\"player1\"\n            player=\"Player 1\"\n            actions={actions1}\n            buys={buys1}\n            wallet={wallet1}\n            victoryPoints={victoryPoints1}\n            turns={turns1}\n          />\n          <div className=\"end-turn\">\n            {\n              cellar1 \n              ? \n              <button className=\"cellar-button\" onClick={this.handleClick1} >End Discard</button> \n              : \n                !playerTurn && remodel\n                ?\n                <div className=\"message\" >\n                  Trash card and gain card from supply worth up to 2 more\n                </div>\n                : \n                  !playerTurn && remodelGain\n                  ?\n                  <div className=\"message\" >\n                    Gain card from supply costing up to {remodelValue}\n                  </div>\n                  :\n                    !playerTurn && mine\n                    ?\n                    <div className=\"message\">\n                      Trash a treasure card for treasure costing up to 3 more\n                    </div>\n                    :\n                      !playerTurn && workshop\n                      ?\n                      <div className=\"message\" >\n                        Gain card from supply costing up to 4\n                      </div>\n                      :\n                        playerTurn && (militia || militiaDiscardSecond)\n                        ?\n                        <div className=\"message\" >\n                          Discard 2 cards or play Moat\n                        </div>\n                        :\n                          !playerTurn && !cellar1 && !gameEnd && gameStart1 && gameStart2 && (!militia && !militiaDiscardSecond)\n                          ? \n                          <button onClick={endTurn1} >End Turn</button> \n                          : \n                          null\n            }\n          </div>\n        </div>\n        {\n          gameEnd \n          ?\n          <div id=\"game-end\">\n            {\n            victoryPoints1 > victoryPoints2\n            ?\n            \"Player 1 Wins!\"\n            :\n            \"Player 2 Wins!\"\n            }\n          </div>\n          :\n          <Fragment>\n            <SupplyCards/>\n          </Fragment>\n        }\n        <div className=\"margins\" >\n          <PlayerTurnInfo \n            key=\"player2\"\n            player=\"Player 2\"\n            actions={actions2}\n            buys={buys2}\n            wallet={wallet2}\n            victoryPoints={victoryPoints2}\n            turns={turns2}\n          />\n          <div className=\"end-turn\" >\n            {\n              cellar2\n                ?\n                <button className=\"cellar-button\" onClick={this.handleClick2} >End Discard</button>\n                :\n                playerTurn && remodel\n                  ?\n                  <div className=\"message\" >\n                    Trash card and gain card from supply costing up to 2 more\n                  </div>\n                  :\n                  playerTurn && remodelGain\n                    ?\n                    <div className=\"message\" >\n                      Gain card from supply costing up to {remodelValue}\n                    </div>\n                    :\n                      playerTurn && mine\n                      ?\n                      <div className=\"message\">\n                        Trash a treasure card for treasure costing up to 3 more\n                      </div>\n                      :\n                        playerTurn && workshop\n                          ?\n                          <div className=\"message\" >\n                            Gain card from supply costing up to 4\n                          </div>\n                          :\n                          !playerTurn && (militia || militiaDiscardSecond)\n                            ?\n                            <div className=\"message\" >\n                              Discard 2 cards or play Moat\n                            </div>\n                            :\n                            playerTurn && !cellar2 && !gameEnd && gameStart1 && gameStart2 && (!militia && !militiaDiscardSecond)\n                              ?\n                              <button onClick={endTurn2} >End Turn</button>\n                              :\n                              null\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n  const { actions1, buys1, wallet1, victoryPoints1, turns1 } = state.playerOne\n  const { actions2, buys2, wallet2, victoryPoints2, turns2 } = state.playerTwo\n  const { playerTurn } = state.game\n  const { cellar1, cellar2, gameEnd, militia, militiaDiscardFirst, \n          militiaDiscardSecond, workshopGain, remodelGain, remodelValue,\n          workshop, remodel, mine, gameStart1, gameStart2 } = state.supply\n\n  return {\n    actions1,\n    buys1,\n    wallet1,\n    victoryPoints1,\n    turns1,\n    gameStart1,\n\n    actions2,\n    buys2,\n    wallet2,\n    victoryPoints2,\n    turns2,\n    gameStart2,\n\n    playerTurn,\n    gameEnd,\n\n    cellar1,\n    cellar2,\n    militia,\n    militiaDiscardFirst,\n    militiaDiscardSecond,\n    workshopGain,\n    workshop,\n    remodel,\n    remodelGain,\n    remodelValue,\n    mine\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    endTurn1: () => {\n      dispatch({ type: \"TURN1\" })\n    },\n    endTurn2: () => {\n      dispatch({ type: \"TURN2\" })\n    },\n    draw: () => {\n      dispatch({ type: \"DRAW1\" })\n    },\n    endCellar1: () => {\n      dispatch({ type: \"END_CELLAR1\" })\n    },\n    endCellar2: () => {\n      dispatch({ type: \"END_CELLAR2\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(SupplyArea)","import React from 'react'\nimport Card from './card'\nimport { connect } from 'react-redux'\n\nclass Trash extends React.Component {\n\n  componentDidMount() {\n    if (this.props.trash.length === 0) {\n      fetch('https://blooming-sierra-89816.herokuapp.com/api/v1/cards')\n        .then(resp => resp.json())\n        .then(cards => {\n          this.props.setTrash(cards.filter(card => {\n            return card.name === \"Trash\"\n          }))\n        })\n    }\n  }\n\n  renderTrash = () => {\n    return this.props.trash.map((card, index) => {\n      return <Card key={card.id} card={card} index={index} />\n    })\n  }\n\n  render() {\n    return(\n      <div id=\"trash\" >\n        {this.renderTrash()}\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { trash } = state.supply\n\n  return {\n    trash: trash\n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    setTrash: (trash) => {\n      dispatch({ type: \"TRASH\", payload: trash })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(Trash)","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass CardInfo extends React.Component {\n\n  render() {\n    const { card } = this.props.hoverCard.props\n    return (\n      <div className=\"card-info\" >\n        <h4>{ card.name }</h4>\n        <p>{ card.description }</p>\n        <p>Cost: { card.cost }</p>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { hoverCard } = state.supply\n\n  return {\n    hoverCard\n  }\n\n}\n\n\nexport default connect(msp, null)(CardInfo)","import React from 'react'\nimport PlayerOneArea from './playeronearea'\nimport PlayerTwoArea from './playertwoarea'\nimport SupplyArea from './supplyarea'\nimport Trash from '../components/trash'\nimport CardInfo from '../components/cardinfo'\nimport { connect } from 'react-redux'\n\nclass PlayTable extends React.Component {\n\n  render() {\n    return(\n      <div id=\"play-table\">\n        <SupplyArea />\n        <div id=\"player-area-container\">\n          <PlayerOneArea />\n          { this.props.isHovered ? <CardInfo key=\"card-info\" /> : <Trash />}\n          <PlayerTwoArea />\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const { isHovered } = state.supply\n\n  return {\n    isHovered\n  }\n\n}\n\nexport default connect(msp, null)(PlayTable)","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass Menu extends React.Component {\n\n  render() {\n    return(\n      <div id=\"menu\" >\n        <div id=\"menu-list\">\n          <Link to=\"/playgame\" onClick={this.props.startGame}>Start Game</Link>\n          <Link to=\"/instructions\" >Instructions</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction msp(state) {\n\n  const {  } = state.supply\n\n  return {\n    \n  }\n\n}\n\nfunction mdp(dispatch) {\n  return {\n    startGame: () => {\n      dispatch({ type: \"START\" })\n    }\n  }\n}\n\nexport default connect(msp, mdp)(Menu) ","import React from 'react'\nimport './App.css'\nimport './Supply.css'\nimport './Menu.css'\nimport PlayTable from './containers/playtable'\nimport Menu from './containers/menu'\nimport { Route, Switch } from \"react-router-dom\"\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route \n          path=\"/menu\"\n          render={() => \n            <Menu />\n          }\n          />\n          <Route \n            path=\"/\"\n            render={() =>\n              <PlayTable />\n            }\n          />\n        </Switch>\n      </div>\n    )\n  }\n} // end of App component\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const defaultState = {\n// PLAYER 1 TURN ON FALSE, PLAYER 2 TURN ON TRUE\n  playerTurn: false,\n  isHovered: false,\n  hoverCard: null,\n  mine: false,\n  remodel: false,\n  remodelGain: false,\n  remodelValue: 0,\n  workshop: false,\n  workshopGain: false,\n  militia: false,\n  militiaDiscardFirst: false,\n  militiaDiscardSecond: false,\n  cellar1: false,\n  cellar2: false,\n  cellarHand: [],\n  gameStart1: false,\n  gameStart2: false,\n\n  //CARD PILES\n  cellars: [],\n  moats: [],\n  workshops: [],\n  woodcutters: [],\n  villages: [],\n  militias: [],\n  smithys: [],\n  remodels: [],\n  markets: [],\n  mines: [],\n  coppers: [],\n  silvers: [],\n  golds: [],\n  estates: [],\n  duchys: [],\n  provinces: [],\n  trash: [],\n\n  emptyPiles: 0,\n  gameEnd: false,\n\n  // PLAYER 1 ARRAYS\n  deck1: [],\n  discard1: [],\n  hand1: [],\n  // PLAYER 2 ARRAYS\n  deck2: [],\n  discard2: [],\n  hand2: []\n\n}\n\nfunction supplyReducer(prevState=defaultState, action) {\n  let shuffle = require('shuffle-array')\n  switch (action.type) {\n    // INITIAL SUPPLY RENDER\n    case \"CELLARS\":\n      return {...prevState, cellars: action.payload }\n    case \"MOATS\":\n      return { ...prevState, moats: action.payload }\n    case \"WORKSHOPS\":\n      return { ...prevState, workshops: action.payload }\n    case \"WOODCUTTERS\":\n      return { ...prevState, woodcutters: action.payload }  \n    case \"VILLAGES\":\n      return { ...prevState, villages: action.payload }\n    case \"MILITIAS\":\n      return { ...prevState, militias: action.payload }\n    case \"SMITHYS\":\n      return { ...prevState, smithys: action.payload }\n    case \"REMODELS\":\n      return { ...prevState, remodels: action.payload }\n    case \"MARKETS\":\n      return { ...prevState, markets: action.payload }\n    case \"MINES\":\n      return { ...prevState, mines: action.payload }\n    case \"COPPERS\":\n      return {...prevState, coppers: action.payload}\n    case \"SILVERS\":\n      return { ...prevState, silvers: action.payload }\n    case \"GOLDS\":\n      return { ...prevState, golds: action.payload }\n    case \"ESTATES\":\n      return { ...prevState, estates: action.payload }\n    case \"DUCHYS\":\n      return { ...prevState, duchys: action.payload }\n    case \"PROVINCES\":\n      return { ...prevState, provinces: action.payload }\n    case \"TRASH\": {\n      return { ...prevState, trash: prevState.trash.concat(action.payload) }\n    }\n\n    // PLAYER ACTIONS\n    \n    //PLAYER 1 ENDS TURN\n    case \"TURN1\": {\n      let endHand = [...prevState.hand1]\n      let endDiscard = [...prevState.discard1.concat(endHand)]\n      let shuffleDeck = shuffle([...prevState.deck1.concat(endDiscard)])\n      return { \n        ...prevState, \n        playerTurn: !prevState.playerTurn, \n        discard1: prevState.deck1.length >= 5 ? prevState.discard1.concat(endHand) : [], \n        hand1: prevState.deck1.length >= 5 ? [...prevState.deck1.slice(-5)] : [...shuffleDeck.slice(-5)], \n        deck1: prevState.deck1.length >= 5 ? [...prevState.deck1.slice(0, -5)] : [...shuffleDeck.slice(0, -5)],\n        mine: false, \n        remodel: false, \n        remodelGain: false, \n        workshop: false, \n        workshopGain: false, \n        militia: false, \n        militiaDefend: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: false, \n        cellar1: false \n      }\n    }\n    //PLAYER 2 ENDS TURN\n    case \"TURN2\": {\n      let endHand = [...prevState.hand2]\n      let endDiscard = [...prevState.discard2.concat(endHand)]\n      let shuffleDeck = shuffle([...prevState.deck2.concat(endDiscard)])\n      return { \n        ...prevState, \n        playerTurn: !prevState.playerTurn, \n        discard2: prevState.deck2.length >= 5 ? prevState.discard2.concat(endHand) : [], \n        hand2: prevState.deck2.length >= 5 ? [...prevState.deck2.slice(-5)] : [...shuffleDeck.slice(-5)], \n        deck2: prevState.deck2.length >= 5 ? [...prevState.deck2.slice(0, -5)] : [...shuffleDeck.slice(0, -5)],\n        mine: false, \n        remodel: false, \n        remodelGain: false, \n        workshop: false, \n        workshopGain: false, \n        militia: false, \n        militiaDefend: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: false, \n        cellar2: false,\n        cellarHand: [] \n      }\n    }\n\n    //PLAYER 1 CLICKS TREASURE CARD IN HAND TO PLAY\n    case \"PLAY_TREASURE1\":\n      return {\n        ...prevState, \n        discard1: prevState.discard1.concat(action.payload), \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id) \n      }\n\n    //PLAYER 2 CLICKS TREASURE CARD IN HAND TO PLAY\n    case \"PLAY_TREASURE2\":\n      return { \n        ...prevState, \n        discard2: prevState.discard2.concat(action.payload), \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id) \n      }\n    //PLAYER 1 BUYS CARD FROM SUPPLY\n    case \"BUY1\": {\n      let pile = Object.keys(prevState).find(key => key == `${action.payload.name.toLowerCase()}s`)\n      //IF CARD CLICKED IS PROVINCE, ADD PROVINCE TO PLAYER 1 DISCARD\n      if (prevState[pile].length > 1 && pile !== \"provinces\") {\n        return { \n          ...prevState, \n          discard1: prevState.discard1.concat(action.payload), \n          [pile]: prevState[pile].filter(card => card.id !== action.payload.id) \n        }\n      }\n      //IF CARD CLICKED IS LAST IN PILE AND PILE IS NOT PROVINCE PILE... \n      else if (prevState[pile].length === 1 && pile !== \"provinces\") {\n        //IF NUM OF EMPTY PILES LESS THAN 2, ADD CARD TO P1 DISCARD AND INCREMENT NUMBER OF EMPTY PILES\n        if (prevState.emptyPiles < 2) {\n          return { \n            ...prevState, \n            discard1: prevState.discard1.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n            emptyPiles: prevState.emptyPiles + 1 \n          }\n        } \n        //IF PILE IS THIRD EMPTY PILE, TRIGGER GAME END\n        else {\n          return { \n            ...prevState, \n            discard1: prevState.discard1.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n            gameEnd: true \n          }\n        }\n      } \n      //IF PILE IS PROVINCES...\n      else if (pile === \"provinces\") {\n        //IF MORE THAN ONE PROVINCE LEFT IN PILE, ADD PROVINCE TO PLAYER 1 DISCARD\n        if (prevState[pile].length > 1) {\n          return { \n            ...prevState, \n            discard1: prevState.discard1.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id) \n          }\n        } \n        //IF LAST PROVINCE, TRIGGER GAME END\n        else {\n            return { \n              ...prevState, \n              discard1: prevState.discard1.concat(action.payload), \n              [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n              gameEnd: true \n            }\n          }\n      } \n    }\n    //PLAYER 2 BUYS CARD FROM SUPPLY\n    case \"BUY2\": {\n      let pile = Object.keys(prevState).find(key => key == `${action.payload.name.toLowerCase()}s`)\n      //IF CARD CLICKED IS PROVINCE, ADD PROVINCE TO PLAYER 2 DISCARD\n      if (prevState[pile].length > 1 && pile !== \"provinces\") {\n        return { \n          ...prevState, \n          discard2: prevState.discard2.concat(action.payload), \n          [pile]: prevState[pile].filter(card => card.id !== action.payload.id)\n        }   \n      } \n      //IF CARD CLICKED IS LAST IN PILE AND PILE IS NOT PROVINCE PILE... \n      else if (prevState[pile].length === 1 && pile !== \"provinces\") {\n        //IF NUM OF EMPTY PILES LESS THAN 2, ADD CARD TO P2 DISCARD AND INCREMENT NUMBER OF EMPTY PILES\n        if (prevState.emptyPiles < 3) {\n          return { \n            ...prevState, \n            discard2: prevState.discard2.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n            emptyPiles: prevState.emptyPiles + 1 \n          }   \n        } \n        //IF PILE IS THIRD EMPTY PILE, TRIGGER GAME END\n        else {\n          return { \n            ...prevState, \n            discard2: prevState.discard2.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n            gameEnd: true \n          }   \n        }\n      } \n      //IF PILE IS PROVINCES...\n      else if (pile === \"provinces\") {\n        //IF MORE THAN ONE PROVINCE LEFT IN PILE, ADD PROVINCE TO PLAYER 2 DISCARD\n        if (prevState[pile].length > 1) {\n          return { \n            ...prevState, \n            discard2: prevState.discard2.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id) \n          }   \n        } \n        //IF LAST PROVINCE, TRIGGER GAME END\n        else {\n          return { \n            ...prevState, \n            discard2: prevState.discard2.concat(action.payload), \n            [pile]: prevState[pile].filter(card => card.id !== action.payload.id), \n            gameEnd: true \n          }   \n        }\n      }\n    }\n    //PLAYER 1 CLICKS ACTION CARD IN HAND TO PLAY IT, CARD MOVED FROM HAND TO DISCARD\n    case \"ACTION1\": \n        return { \n          ...prevState, \n          discard1: prevState.discard1.concat(action.payload), \n          hand1: prevState.hand1.filter(card => card.id !== action.payload.id) \n        }\n    //PLAYER 2 CLICKS ACTION CARD IN HAND TO PLAY IT, CARD MOVED FROM HAND TO DISCARD\n    case \"ACTION2\": \n        return { \n          ...prevState, \n          discard2: prevState.discard2.concat(action.payload), \n          hand2: prevState.hand2.filter(card => card.id !== action.payload.id) \n        }\n    //AFTER PLAYER 1 PLAYS MINE CARD, PLAYER CLICKS TREASURE CARD IN HAND TO TRASH AND SWAP FOR HIGHER VALUE TREASURE CARD, MINE SWITCHED BACK TO FALSE\n    case \"TRASH_TREASURE1\": {\n      let pile = action.treasure\n      return { \n        ...prevState, \n        trash: prevState.trash.concat(action.payload), \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id).concat(prevState[pile].slice(-1)), \n        [pile]: prevState[pile].slice(0, -1), \n        mine: false \n      }  \n    }\n    //AFTER PLAYER 2 PLAYS MINE CARD, PLAYER CLICKS TREASURE CARD IN HAND TO TRASH AND SWAP FOR HIGHER VALUE TREASURE CARD, MINE SWITCHED BACK TO FALSE\n    case \"TRASH_TREASURE2\": {\n      let pile = action.treasure\n      return { \n        ...prevState, \n        trash: prevState.trash.concat(action.payload), \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id).concat(prevState[pile].slice(-1)), \n        [pile]: prevState[pile].slice(0, -1), \n        mine: false \n      }  \n    }\n    //AFTER PLAYER 1 PLAYS REMODEL CARD, PLAYER CLICKS CARD IN HAND TO TRASH AND SWAP FOR SUPPLY CARD WORTH TWO MORE\n    case \"TRASH_REMODEL1\": {\n      return { \n        ...prevState, \n        remodel: false, \n        remodelGain: true, \n        trash: prevState.trash.concat(action.payload), \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id), \n        remodelValue: action.payload.cost + 2  \n      }\n    }\n    //AFTER PLAYER 2 PLAYS REMODEL CARD, PLAYER CLICKS CARD IN HAND TO TRASH AND SWAP FOR SUPPLY CARD WORTH TWO MORE\n    case \"TRASH_REMODEL2\": {\n      return { \n        ...prevState, \n        remodel: false, \n        remodelGain: true, \n        trash: prevState.trash.concat(action.payload), \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id), \n        remodelValue: action.payload.cost + 2 \n      }\n    }\n    case \"GAIN_REMODEL1\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { \n        ...prevState, \n        remodelGain: false, \n        [pile]: prevState[pile].slice(0, -1), \n        discard1: prevState.discard1.concat(prevState[pile].slice(-1)) \n      }\n    }\n    case \"GAIN_REMODEL2\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { \n        ...prevState, \n        remodelGain: false, \n        [pile]: prevState[pile].slice(0, -1), \n        discard2: prevState.discard2.concat(prevState[pile].slice(-1)) \n      }\n    }\n    case \"GAIN_WORKSHOP1\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { \n        ...prevState, \n        workshop: false, \n        [pile]: prevState[pile].slice(0, -1), \n        discard1: prevState.discard1.concat(prevState[pile].slice(-1)) \n      }\n    }\n    case \"GAIN_WORKSHOP2\": {\n      let pile = `${action.payload.name.toLowerCase()}s`\n      return { \n        ...prevState, \n        workshop: false, \n        [pile]: prevState[pile].slice(0, -1), \n        discard2: prevState.discard2.concat(prevState[pile].slice(-1)) \n      }\n    }\n    case \"MILITIA_DISCARD_FIRST1\": {\n      return { \n        ...prevState, \n        militia: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: true, \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id), \n        discard2: prevState.discard2.concat(action.payload) \n      }\n    }\n    case \"MILITIA_DISCARD_FIRST2\": {\n      return { \n        ...prevState, \n        militia: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: true, \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id), \n        discard1: prevState.discard1.concat(action.payload) \n      }\n    }\n    case \"MILITIA_DISCARD_SECOND1\": {\n      return { \n        ...prevState, \n        militiaDiscardSecond: false, \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id), \n        discard2: prevState.discard2.concat(action.payload) \n      }\n    }\n    case \"MILITIA_DISCARD_SECOND2\": {\n      return { \n        ...prevState, \n        militiaDiscardSecond: false, \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id), \n        discard1: prevState.discard1.concat(action.payload) \n      }\n    }\n    case \"MILITIA_DEFEND1\": {\n      return { \n        ...prevState, \n        militia: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: false, \n        hand2: prevState.hand2.filter(card => card.id !== action.payload.id), \n        discard2: prevState.discard2.concat(action.payload) \n      }\n    }\n    case \"MILITIA_DEFEND2\": {\n      return { \n        ...prevState, \n        militia: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: false, \n        hand1: prevState.hand1.filter(card => card.id !== action.payload.id), \n        discard1: prevState.discard1.concat(action.payload) \n      }\n    }\n    case \"MILITIA_BREAK\": {\n      return { \n        ...prevState, \n        militia: false, \n        militiaDiscardFirst: false, \n        militiaDiscardSecond: false \n      }\n    }\n    case \"DEAL1\":\n      return { \n        ...prevState, \n        deck1: shuffle(prevState.estates.slice(-3).concat(prevState.coppers.slice(-7))), \n        estates: prevState.estates.slice(0, -3), \n        coppers: prevState.coppers.slice(0, -7) \n      }\n    case \"DEAL2\":\n      return { \n        ...prevState, \n        deck2: shuffle(prevState.estates.slice(-3).concat(prevState.coppers.slice(-7))), \n        estates: prevState.estates.slice(0, -3), \n        coppers: prevState.coppers.slice(0, -7) \n      }\n    case \"CYCLE1\": {\n      return { \n        ...prevState, \n        deck1: shuffle(prevState.discard1), \n        discard1: [] \n      }\n    }\n    case \"CYCLE2\": {\n      return { \n        ...prevState, \n        deck2: shuffle(prevState.discard2), \n        discard2: [] \n      }\n    }\n    case \"DRAW1\": {\n      if (prevState.deck1.length >= 5) {\n        return { \n          ...prevState, \n          hand1: prevState.deck1.slice(-5), \n          deck1: prevState.deck1.slice(0, -5), \n          gameStart1: true \n        }\n      } else {\n        return { \n          ...prevState, \n          deck1: shuffle(prevState.deck1.concat(prevState.discard1)), \n          discard1: [] \n        }\n      }\n    }\n    case \"DRAW2\":\n      if (prevState.deck2.length >= 5) {\n        return { \n          ...prevState, \n          hand2: prevState.deck2.slice(-5), \n          deck2: prevState.deck2.slice(0, -5), \n          gameStart2: true \n        }\n      } else {\n        return { \n          ...prevState, \n          deck2: shuffle(prevState.deck2.concat(prevState.discard2)), \n          discard2: [] \n        }\n      }\n    case \"CELLAR_DISCARD1\": {\n      if (prevState.cellarHand.includes(action.payload)) {\n        if (prevState.deck1.length >= 1) {\n          return { \n            ...prevState, \n            hand1: prevState.hand1.filter(card => card.id !== action.payload.id).concat(prevState.deck1.slice(-1)), \n            discard1: prevState.discard1.concat(action.payload), \n            deck1: prevState.deck1.slice(0, -1) \n          }\n        } else {\n            let cycleHand = prevState.hand1.filter(card => card.id !== action.payload.id)\n            let cycleDiscard = prevState.discard1.concat(action.payload)\n            let shuffleDeck = shuffle(cycleDiscard)\n            return {\n              ...prevState,\n              hand1: cycleHand.concat(shuffleDeck.slice(-1)),\n              deck1: shuffleDeck.slice(0, -1),\n              discard1: []\n          }\n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"CELLAR_DISCARD2\": {\n      if (prevState.cellarHand.includes(action.payload)) {\n        if (prevState.deck2.length >= 1) {\n          return { \n            ...prevState, \n            hand2: prevState.hand2.filter(card => card.id !== action.payload.id).concat(prevState.deck2.slice(-1)), \n            discard2: prevState.discard2.concat(action.payload), \n            deck2: prevState.deck2.slice(0, -1) \n          }\n        } else {\n            let cycleHand = prevState.hand2.filter(card => card.id !== action.payload.id)\n            let cycleDiscard = prevState.discard2.concat(action.payload)\n            let shuffleDeck = shuffle(cycleDiscard) \n            return {\n              ...prevState,\n              hand2: cycleHand.concat(shuffleDeck.slice(-1)),\n              deck2: shuffleDeck.slice(0, -1),\n              discard2: []\n          }\n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"END_CELLAR1\":\n      return { ...prevState, cellar1: false }\n    case \"END_CELLAR2\":\n      return { ...prevState, cellar2: false }\n    // CARD TRIGGERS\n    case \"+1CARD1\": {\n      if (prevState.deck1.length > 0) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-1)), \n          deck1: prevState.deck1.slice(0, -1) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return { \n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-1)), \n          deck1: shuffleDeck.slice(0, -1), \n          discard1: [] \n        }\n      }\n    }\n    case \"+2CARDS1\": {\n      if (prevState.deck1.length > 1) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-2)), \n          deck1: prevState.deck1.slice(0, -2) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return {\n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-2)),\n          deck1: shuffleDeck.slice(0, -2),\n          discard1: []\n        }\n      }\n    }\n    case \"+3CARDS1\": {\n      if (prevState.deck1.length > 2) {\n        return { \n          ...prevState, \n          hand1: prevState.hand1.concat(prevState.deck1.slice(-3)), \n          deck1: prevState.deck1.slice(0, -3) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard1)\n        return {\n          ...prevState,\n          hand1: prevState.hand1.concat(shuffleDeck.slice(-3)),\n          deck1: shuffleDeck.slice(0, -3),\n          discard1: []\n        }\n      }\n    }\n    case \"+1CARD2\": {\n      if (prevState.deck2.length > 0) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-1)), \n          deck2: prevState.deck2.slice(0, -1) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-1)),\n          deck2: shuffleDeck.slice(0, -1),\n          discard2: []\n        }\n      }\n    }\n    case \"+2CARDS2\": {\n      if (prevState.deck2.length > 1) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-2)), \n          deck2: prevState.deck2.slice(0, -2) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-2)),\n          deck2: shuffleDeck.slice(0, -2),\n          discard2: []\n        }\n      }\n    }\n    case \"+3CARDS2\": {\n      if (prevState.deck2.length > 2) {\n        return { \n          ...prevState, \n          hand2: prevState.hand2.concat(prevState.deck2.slice(-3)), \n          deck2: prevState.deck2.slice(0, -3) \n        }\n      } else {\n        let shuffleDeck = shuffle(prevState.discard2)\n        return {\n          ...prevState,\n          hand2: prevState.hand2.concat(shuffleDeck.slice(-3)),\n          deck2: shuffleDeck.slice(0, -3),\n          discard2: []\n        }\n      }\n    }\n    case \"MINE1\": {\n      if (prevState.hand1.some(card => card.name === \"Copper\" || card.name === \"Silver\")) {\n        return { \n          ...prevState, \n          mine: true \n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"MINE2\": {\n      if (prevState.hand2.some(card => card.name === \"Copper\" || card.name === \"Silver\")) {\n        return { \n          ...prevState, \n          mine: true \n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"REMODEL1\": {\n      if (prevState.hand1.length > 0) {\n        return { \n          ...prevState, \n          remodel: true \n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"REMODEL2\": {\n      if (prevState.hand2.length > 0) {\n        return { \n          ...prevState, \n          remodel: true\n        }\n      } else {\n        return {\n          ...prevState\n        }\n      }\n    }\n    case \"WORKSHOP1\":\n      return { \n        ...prevState, \n        workshop: true \n      }\n    case \"WORKSHOP2\":\n      return { \n        ...prevState, \n        workshop: true \n      }\n    case \"ATTACK1\": {\n      if (prevState.hand2.length > 3) {\n        return { \n          ...prevState, \n          militia: true, \n          militiaDiscardFirst: true \n        }\n      } else {\n        return { \n          ...prevState \n        }\n      }\n    }\n    case \"ATTACK2\": {\n      if (prevState.hand1.length > 3) {\n        return { \n          ...prevState, \n          militia: true, \n          militiaDiscardFirst: true \n        }\n      } else {\n        return { \n          ...prevState \n        }\n      }\n      }\n    case \"CELLAR1\":\n      return { \n        ...prevState, \n        cellar1: true, \n        cellarHand: [...prevState.hand1] \n      }\n    case \"CELLAR2\":\n      return { \n        ...prevState, \n        cellar2: true, \n        cellarHand: [...prevState.hand2] \n      }\n    case \"HOVER_ON\":\n      return { \n        ...prevState, \n        isHovered: true, \n        hoverCard: action.payload \n      }\n    case \"HOVER_OFF\":\n      return { \n        ...prevState, \n        isHovered: false, \n        hoverCard: action.payload \n      }\n    default:\n      return prevState\n  }\n\n}\n\nexport default supplyReducer ","const defaultState = {\n  playerTurn: false,\n  gameEnd: false,\n}\n\n//Player 1 turn on false, Player 2 turn on true\nfunction gameReducer(prevState=defaultState, action) {\n  switch (action.type) {\n    case \"TURN1\":\n      return { ...prevState, playerTurn: !prevState.playerTurn}\n    case \"TURN2\":\n      return { ...prevState, playerTurn: !prevState.playerTurn }\n    case \"END\":\n      return {...prevState, gameEnd: true}\n    default:\n      return prevState\n  }\n\n}\n\nexport default gameReducer ","const defaultState = {\n  actions1: 1,\n  buys1: 1,\n  wallet1: 0,\n  victoryPoints1: 3,\n  turns1: 0\n}\n\nfunction playerOneReducer(prevState = defaultState, action) {\n  switch (action.type) {\n    case \"PLAY_TREASURE1\":\n      return { ...prevState, wallet1: prevState.wallet1 + action.payload.value }\n    case \"BUY1\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, wallet1: prevState.wallet1 - action.payload.cost, buys1: prevState.buys1 - 1, victoryPoints1: prevState.victoryPoints1 + action.payload.victory_points }\n      }\n      else {\n        return { ...prevState, wallet1: prevState.wallet1 - action.payload.cost, buys1: prevState.buys1 - 1 }\n      }\n    }\n    case \"TURN1\":\n      return { ...prevState, actions1: 1, buys1: 1, wallet1: 0, turns1: prevState.turns1 + 1 }\n    case \"ACTION1\": \n        return { ...prevState, actions1: prevState.actions1 - 1 }\n    case \"+1ACTION1\":\n      return { ...prevState, actions1: prevState.actions1 + 1 }\n    case \"+2ACTIONS1\":\n      return { ...prevState, actions1: prevState.actions1 + 2 }\n    case \"+1BUY1\":\n      return { ...prevState, buys1: prevState.buys1 + 1 }\n    case \"+1WALLET1\":\n      return { ...prevState, wallet1: prevState.wallet1 + 1 }\n    case \"+2WALLET1\":\n      return { ...prevState, wallet1: prevState.wallet1 + 2 }\n    case \"TRASH_REMODEL1\":\n      return { ...prevState, victoryPoints1: prevState.victoryPoints1 - action.payload.victory_points }\n    case \"GAIN_REMODEL1\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, victoryPoints1: prevState.victoryPoints1 + action.payload.victory_points }\n      }\n    }\n    default:\n      return prevState\n  }\n\n}\n\nexport default playerOneReducer","const defaultState = {\n  actions2: 1,\n  buys2: 1,\n  wallet2: 0,\n  victoryPoints2: 3,\n  turns2: 0\n}\n\nfunction playerTwoReducer(prevState=defaultState, action) {\n\n  switch (action.type) {\n    case \"PLAY_TREASURE2\":\n      return { ...prevState, wallet2: prevState.wallet2 + action.payload.value }\n    case \"BUY2\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, wallet2: prevState.wallet2 - action.payload.cost, buys2: prevState.buys2 - 1, victoryPoints2: prevState.victoryPoints2 + action.payload.victory_points }\n      }\n      else {\n        return { ...prevState, wallet2: prevState.wallet2 - action.payload.cost, buys2: prevState.buys2 - 1 }\n      }\n    }\n    case \"TURN2\":\n      return { ...prevState, actions2: 1, buys2: 1, wallet2: 0, turns2: prevState.turns2 + 1 }\n    case \"ACTION2\": \n        return { ...prevState, actions2: prevState.actions2 - 1 }    \n    case \"+1ACTION2\":\n      return { ...prevState, actions2: prevState.actions2 + 1 }\n    case \"+2ACTIONS2\":\n      return { ...prevState, actions2: prevState.actions2 + 2 }\n    case \"+1BUY2\":\n      return { ...prevState, buys2: prevState.buys2 + 1 }\n    case \"+1WALLET2\":\n      return { ...prevState, wallet2: prevState.wallet2 + 1 }\n    case \"+2WALLET2\":\n      return { ...prevState, wallet2: prevState.wallet2 + 2 }\n    case \"TRASH_REMODEL2\":\n      return { ...prevState, victoryPoints2: prevState.victoryPoints2 - action.payload.victory_points }\n    case \"GAIN_REMODEL2\": {\n      if (action.payload.card_type === \"Victory\") {\n        return { ...prevState, victoryPoints2: prevState.victoryPoints2 + action.payload.victory_points }\n      }\n    }\n    default:\n      return prevState\n  }\n\n}\n\nexport default playerTwoReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport supplyReducer from './reducers/supplyreducer'\nimport gameReducer from './reducers/gamereducer'\nimport playerOneReducer from './reducers/playeronereducer'\nimport playerTwoReducer from './reducers/playertworeducer'\n\nconst rootReducer = combineReducers({supply: supplyReducer, game: gameReducer, playerOne: playerOneReducer, playerTwo: playerTwoReducer})\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(<Provider store={store}><Router><Route path=\"/\" component={App} /></Router></Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}